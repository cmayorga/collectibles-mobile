{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","serviceWorker.ts","store/actions/network.ts","store/actions/app.ts","store/reducers/network.ts","store/reducers/app.ts","store/reducers/index.ts","store/selectors/app.ts","store/epics/app.ts","store/epics/network.ts","store/epics/index.ts","store/services/protokol-connection.ts","store/services/local-storage-service.ts","store/configure-store.ts","utils/encryption.ts","providers/AuthRegisterProvider.tsx","utils/styles.ts","components/ionic/Button.tsx","components/ionic/Text.tsx","constants/font-size.ts","constants/font-weight.ts","components/ionic/Img.tsx","pages/WelcomePage.tsx","App.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Boolean","window","location","hostname","match","NetworkActions","AppActions","LoadNetworkConfigurationAction","baseUrl","type","LOAD_NETWORK_CONFIGURATION","payload","initialState","isLoading","reducer","state","action","NETWORK_CONFIGURATION_SUCCESS","nodeCryptoConfiguration","SetEncodedUserPrivateKeyAction","userPrivateKey","saveToStorage","SET_ENCODED_USER_PRIVATE_KEY","undefined","SET_BASE_URL","combineReducers","app","network","baseUrlSelector","encodedUserPrivateKeySelector","action$","state$","pipe","distinctUntilChanged","filter","storage","ofType","withLatestFrom","tap","encodedUserPrivateKey","set","ignoreElements","first","switchMap","get","of","connection","stateBaseUrl","defer","api","crypto","response","body","data","catchError","err","error","NETWORK_CONFIGURATION_ERROR","combineEpics","appEpics","networkEpics","timeout","ProtokolConnection","withOptions","version","process","STORAGE_VERSION","PREFIX","key","value","serializedValue","JSON","stringify","localStorage","setItem","getItem","parse","epicMiddleware","createEpicMiddleware","dependencies","Encryption","hash","pin","utils","hex","fromBytes","SHA256","asBytes","encode","toEncode","encodedBytes","ModeOfOperation","ctr","toBytes","encrypt","utf8","decode","toDecode","decodedBytes","decrypt","authRegisterProviderInitialState","passphrase","AuthRegisterContext","createContext","AuthRegisterContextProvider","children","useState","setState","dispatch","useDispatch","generatePassphrase","useCallback","language","bip39","prevState","setPin","passphraseJson","encoded","providerState","Provider","Styles","serializeFontSize","fontSize","serializeFontWeight","fontWeight","Button","styled","IonButton","FontSize","FontWeight","Text","IonText","Img","img","Content","IonContent","WelcomePage","fullscreen","className","size","XL","color","BOLD","L","srcSet","src","alt","expand","M","SM","App","useEffect","path","component","exact","render","to","setupConfig","mode","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","run","rootEpic","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2JAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.c3b353f2.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t353,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t354,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t355,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t356,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t357,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t358,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t359,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t360,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t361,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t362,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t363,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t364,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t365,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t366,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t367,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t368,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t369,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t370,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t371,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t372,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t373,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t374,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t375,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t376,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t377,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t378,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t379,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t380,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t381,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t382,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t383,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t384,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t385,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t386,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t387,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t388,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t389,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t390,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t391,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t392,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t393,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t394,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t395,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 189;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t397,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 191;\nmodule.exports = webpackAsyncContext;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {Action} from 'redux';\nimport {NodeCryptoConfiguration} from \"@arkecosystem/client/dist/resourcesTypes/node\";\n\n// Actions\nenum NetworkActions {\n    LOAD_NETWORK_CONFIGURATION = '@Network/LOAD_NETWORK_CONFIGURATION',\n    NETWORK_CONFIGURATION_SUCCESS = '@Network/NETWORK_CONFIGURATION_SUCCESS',\n    NETWORK_CONFIGURATION_ERROR = '@Network/NETWORK_CONFIGURATION_ERROR',\n}\n\nexport interface LoadNetworkConfigurationActionType extends Action<NetworkActions.LOAD_NETWORK_CONFIGURATION> {\n    payload: {\n        baseUrl?: string\n    }\n}\n\nexport interface NetworkConfigurationSuccessActionType extends Action<NetworkActions.NETWORK_CONFIGURATION_SUCCESS> {\n    payload: {\n        nodeCryptoConfiguration: NodeCryptoConfiguration\n    }\n}\n\nexport interface NetworkConfigurationErrorActionType extends Action<NetworkActions.NETWORK_CONFIGURATION_ERROR> {\n    payload: {\n        error: Error\n    }\n}\n\n// Action creators\nconst LoadNetworkConfigurationAction = (baseUrl?: string): LoadNetworkConfigurationActionType => ({\n    type: NetworkActions.LOAD_NETWORK_CONFIGURATION,\n    payload: {\n        baseUrl\n    }\n})\n\nconst NetworkConfigurationSuccessAction = (nodeCryptoConfiguration: NodeCryptoConfiguration): NetworkConfigurationSuccessActionType => ({\n    type: NetworkActions.NETWORK_CONFIGURATION_SUCCESS,\n    payload: {\n        nodeCryptoConfiguration\n    }\n})\n\nconst NetworkConfigurationErrorAction = (error: Error): NetworkConfigurationErrorActionType => ({\n    type: NetworkActions.NETWORK_CONFIGURATION_ERROR,\n    payload: {\n        error\n    }\n})\n\nexport type NETWORK_ACTION_TYPES =\n    & LoadNetworkConfigurationActionType\n    & NetworkConfigurationSuccessActionType\n    & NetworkConfigurationErrorActionType;\n\nexport {\n    NetworkActions,\n    LoadNetworkConfigurationAction,\n    NetworkConfigurationSuccessAction,\n    NetworkConfigurationErrorAction\n}","import { Action } from 'redux';\n\n// Actions\nenum AppActions {\n    SET_BASE_URL = '@App/SET_BASE_URL',\n    SET_ENCODED_USER_PRIVATE_KEY = '@App/SET_ENCODED_USER_PRIVATE_KEY',\n}\n\nexport interface SetBaseUrlAppActionType extends Action<AppActions.SET_BASE_URL> {\n    payload: {\n        baseUrl: string\n    }\n}\n\nexport interface SetEncodedUserPrivateKeyActionType extends Action<AppActions.SET_ENCODED_USER_PRIVATE_KEY> {\n    payload: {\n        userPrivateKey: string,\n        saveToStorage?: boolean\n    }\n}\n\n// Action creators\nconst SetBaseUrlAppAction = (baseUrl: string): SetBaseUrlAppActionType => ({\n    type: AppActions.SET_BASE_URL,\n    payload: {\n        baseUrl\n    }\n})\n\nconst SetEncodedUserPrivateKeyAction = (userPrivateKey: string, saveToStorage = true): SetEncodedUserPrivateKeyActionType => ({\n    type: AppActions.SET_ENCODED_USER_PRIVATE_KEY,\n    payload: {\n        userPrivateKey,\n        saveToStorage\n    }\n})\n\nexport type APP_ACTION_TYPES = SetBaseUrlAppActionType & SetEncodedUserPrivateKeyActionType;\n\nexport {\n    AppActions,\n    SetBaseUrlAppAction,\n    SetEncodedUserPrivateKeyAction\n}","import {NETWORK_ACTION_TYPES, NetworkActions} from \"../actions/network\";\nimport {Reducer} from \"redux\";\nimport {NodeCryptoConfiguration} from \"@arkecosystem/client/dist/resourcesTypes/node\";\n\nexport interface NetworkState {\n    isLoading: boolean;\n    nodeCryptoConfiguration?: NodeCryptoConfiguration\n}\n\nconst initialState: NetworkState = {\n    isLoading: false\n}\n\nconst reducer: Reducer<NetworkState, NETWORK_ACTION_TYPES> = (state = initialState, action) => {\n    const {type} = action;\n\n    switch (type) {\n        case NetworkActions.LOAD_NETWORK_CONFIGURATION: {\n            return {\n                ...state,\n                isLoading: true\n            }\n        }\n        case NetworkActions.NETWORK_CONFIGURATION_SUCCESS: {\n            const {payload: {nodeCryptoConfiguration}} = action;\n            return {\n                ...state,\n                isLoading: false,\n                nodeCryptoConfiguration\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import {Reducer} from \"redux\";\nimport {\n    APP_ACTION_TYPES,\n    AppActions\n} from \"../actions/app\";\n\nexport interface AppState {\n    baseUrl?: string;\n    userPrivateKey?: string;\n}\n\nconst initialState: AppState = {\n    baseUrl: undefined,\n    userPrivateKey: undefined\n}\n\nconst reducer: Reducer<AppState, APP_ACTION_TYPES> = (state = initialState, action) => {\n    const {type} = action;\n\n    switch (type) {\n        case AppActions.SET_BASE_URL: {\n            const {payload: {baseUrl}} = action;\n            return {\n                ...state,\n                baseUrl\n            }\n        }\n        case AppActions.SET_ENCODED_USER_PRIVATE_KEY: {\n            const {payload: {userPrivateKey}} = action;\n\n            return {\n                ...state,\n                userPrivateKey\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import {combineReducers} from 'redux';\nimport network from './network';\nimport app from './app';\nimport {RootState} from \"../types\";\n\nexport default combineReducers<RootState>({\n    app,\n    network\n});\n","import {RootState} from \"../types\";\n\nexport const baseUrlSelector = (state: RootState) => state.app.baseUrl;\nexport const encodedUserPrivateKeySelector = (state: RootState) => state.app.userPrivateKey;\n","import {distinctUntilChanged, filter, first, ignoreElements, map, switchMap, tap, withLatestFrom} from \"rxjs/operators\";\nimport {RootEpic} from \"../types\";\nimport {LoadNetworkConfigurationAction} from \"../actions/network\";\nimport {baseUrlSelector, encodedUserPrivateKeySelector} from \"../selectors/app\";\nimport {ofType} from \"redux-observable\";\nimport {AppActions, SetEncodedUserPrivateKeyAction, SetEncodedUserPrivateKeyActionType} from \"../actions/app\";\nimport {of} from \"rxjs\";\n\nconst onInitLoadNetworkEpic: RootEpic = ((action$, state$) =>\n        state$.pipe(\n            map(baseUrlSelector),\n            distinctUntilChanged(),\n            filter(baseUrl => !!baseUrl),\n            map(LoadNetworkConfigurationAction)\n        )\n)\n\nconst persistUserPrivateKeyInStorageEpic: RootEpic = (\n    action$,\n    state$,\n    {storage}\n) =>\n    action$.pipe(\n        ofType(AppActions.SET_ENCODED_USER_PRIVATE_KEY),\n        withLatestFrom(state$.pipe(map(encodedUserPrivateKeySelector))),\n        tap(([{payload}, encodedUserPrivateKey]) => {\n            const {saveToStorage} = payload as SetEncodedUserPrivateKeyActionType[\"payload\"];\n            if (saveToStorage) {\n                storage.set('pk', encodedUserPrivateKey);\n            }\n        }),\n        ignoreElements()\n    );\n\nconst restoreUserPrivateKeyFromStorageEpic: RootEpic = (\n    (action$, state$, {storage}) =>\n    action$.pipe(\n        first(),\n        switchMap(() => {\n            const userPrivateKey = storage.get<string>('pk');\n            if (userPrivateKey) {\n                return of(SetEncodedUserPrivateKeyAction(userPrivateKey, false));\n            }\n            return of().pipe(ignoreElements());\n        })\n    )\n)\n\nexport default [\n    onInitLoadNetworkEpic,\n    persistUserPrivateKeyInStorageEpic,\n    restoreUserPrivateKeyFromStorageEpic\n];","import {\n    LoadNetworkConfigurationActionType,\n    NetworkActions,\n    NetworkConfigurationErrorAction,\n    NetworkConfigurationSuccessAction\n} from \"../actions/network\";\nimport {catchError, map, switchMap, withLatestFrom} from \"rxjs/operators\";\nimport {defer, of} from \"rxjs\";\nimport {RootEpic} from \"../types\";\nimport {baseUrlSelector} from \"../selectors/app\";\n\nconst fetchUserEpic: RootEpic = (action$, state$, {connection}) =>\n    action$\n        .ofType(NetworkActions.LOAD_NETWORK_CONFIGURATION)\n        .pipe(\n            withLatestFrom(state$.pipe(map(baseUrlSelector))),\n            switchMap(([action, stateBaseUrl]) => {\n                    const {payload} = action as LoadNetworkConfigurationActionType;\n\n                    return defer(() =>\n                        connection(payload.baseUrl || stateBaseUrl!)\n                            .api('node')\n                            .crypto()\n                    ).pipe(\n                        map(response => NetworkConfigurationSuccessAction(response?.body?.data)),\n                        catchError(err => of(NetworkConfigurationErrorAction(err)))\n                    );\n                }\n            )\n        )\n\n\nexport default [\n    fetchUserEpic\n];","import {combineEpics} from \"redux-observable\";\nimport appEpics from './app';\nimport networkEpics from './network';\n\nexport default combineEpics(\n    ...appEpics,\n    ...networkEpics\n)","import { ProtokolConnection } from '@protokol/client';\n\nconst connection = (baseUrl: string, timeout = 5000) =>\n    new ProtokolConnection(`${baseUrl}/api`).withOptions({\n        timeout\n    });\n\nexport default connection;","// Add version for possible migrations\nconst version = process.env.STORAGE_VERSION || 0;\nconst PREFIX = `collectibles-mobile-v${version}::`;\n\nexport function set<T = any>(key: string, value: T): void {\n    try {\n        const serializedValue = JSON.stringify(value);\n        localStorage.setItem(`${PREFIX}${key}`, serializedValue);\n    } catch (error) {\n        throw new Error(`Failed to serialize value for key: \"${key}\"`);\n    }\n}\n\nexport function get<T = any>(key: string): T | undefined {\n    try {\n        const serializedValue = localStorage.getItem(`${PREFIX}${key}`);\n        if (!serializedValue) {\n            return;\n        }\n        return JSON.parse(serializedValue);\n    } catch (error) {\n        throw new Error(`Failed to deserialize value for key: \"${key}\"`);\n    }\n}\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport {createEpicMiddleware} from 'redux-observable';\nimport rootReducer from './reducers';\nimport rootEpic from './epics';\nimport {RootActions, RootDependencies, RootState} from \"./types\";\nimport connection from \"./services/protokol-connection\";\nimport * as storage from './services/local-storage-service';\n\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nconst epicMiddleware = createEpicMiddleware<RootActions, RootActions, RootState, RootDependencies>({\n    dependencies: {\n        connection,\n        storage\n    }\n});\n\nexport default function configureStore() {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const store = createStore(\n        rootReducer,\n        composeEnhancers(\n            applyMiddleware(\n                epicMiddleware,\n            )\n        )\n    );\n\n    epicMiddleware.run(rootEpic);\n    return store;\n};","import { ModeOfOperation, utils } from 'aes-js';\nimport SHA256 from 'sha256';\n\nexport abstract class Encryption {\n    static hash = (pin: string) => utils.hex.fromBytes(SHA256(pin, { asBytes: true }));\n    static encode = (toEncode: string, hash: string) => {\n        const encodedBytes = new ModeOfOperation.ctr(utils.hex.toBytes(hash)).encrypt(utils.utf8.toBytes(toEncode));\n        return utils.hex.fromBytes(encodedBytes);\n    }\n    static decode = (toDecode: string, hash: string) => {\n        const decodedBytes = new ModeOfOperation.ctr(utils.hex.toBytes(hash)).decrypt(utils.hex.toBytes(toDecode));\n        return utils.utf8.fromBytes(decodedBytes);\n    }\n}","import React, {createContext, FC, useCallback, useState} from \"react\";\nimport * as bip39 from \"bip39\";\nimport {Encryption} from \"../utils/encryption\";\nimport {useDispatch} from \"react-redux\";\nimport {SetEncodedUserPrivateKeyAction} from \"../store/actions/app\";\n\ninterface AuthRegisterProviderState {\n    passphrase: string | null;\n}\n\ninterface AuthRegisterProviderContext {\n    readonly state: AuthRegisterProviderState;\n    generatePassphrase: (language?: string) => void;\n    setPin: (pin: string) => void;\n}\n\n\nconst authRegisterProviderInitialState: AuthRegisterProviderState = {\n    passphrase: null\n}\n\nexport const AuthRegisterContext = createContext<AuthRegisterProviderContext>({} as AuthRegisterProviderContext);\n\nconst AuthRegisterContextProvider: FC = ({children}) => {\n    const [state, setState] = useState<AuthRegisterProviderState>({\n        ...authRegisterProviderInitialState\n    })\n    const dispatch = useDispatch();\n\n    const generatePassphrase: AuthRegisterProviderContext[\"generatePassphrase\"] = useCallback((language = 'english') => {\n        const passphrase = bip39.generateMnemonic(\n            undefined,\n            undefined,\n            bip39.wordlists[language]\n        );\n\n        setState(prevState => ({\n            ...prevState,\n            passphrase\n        }));\n    }, [setState])\n\n    const setPin: AuthRegisterProviderContext[\"setPin\"] = useCallback((pin) => {\n        const {passphrase} = state;\n        const passphraseJson = JSON.stringify({passphrase});\n        const encoded = Encryption.encode(passphraseJson, Encryption.hash(pin));\n\n        dispatch(SetEncodedUserPrivateKeyAction(encoded));\n\n        /* const decoded = Encryption.decode(encoded, hashedPin);\n        console.log(decoded);\n        const passphraseJsonDecoded = JSON.parse(decoded);\n        console.dir(passphraseJsonDecoded);\n\n        try {\n            const encodedWrong = Encryption.decode(passphraseJson, Encryption.hash('4321'));\n            JSON.parse(encodedWrong);\n        } catch (e) {\n            console.error('decode failed', e);\n        } */\n    }, [state, dispatch]);\n\n    const providerState: AuthRegisterProviderContext = {\n        state,\n        generatePassphrase,\n        setPin\n    }\n\n    return (<AuthRegisterContext.Provider value={providerState}>{children}</AuthRegisterContext.Provider>);\n}\n\nexport default AuthRegisterContextProvider;","import {FontSize} from \"../constants/font-size\";\nimport {FontWeight} from \"../constants/font-weight\";\n\nexport abstract class Styles {\n    static serializeFontSize = (fontSize?: FontSize) => {\n        if(!fontSize) {\n            return;\n        }\n        return `font-size: ${fontSize};`;\n    };\n\n    static serializeFontWeight = (fontWeight?: FontWeight) => {\n        if(!fontWeight) {\n            return;\n        }\n        return `font-weight: ${fontWeight};`;\n    }\n}","import styled from \"styled-components\";\nimport {IonButton} from \"@ionic/react\";\nimport {FontSize} from \"../../constants/font-size\";\nimport {Styles} from \"../../utils/styles\";\nimport {FontWeight} from \"../../constants/font-weight\";\n\nconst Button = styled(IonButton)<{ fontSize?: FontSize, fontWeight?: FontWeight }>`\n  &::part(native) {\n  }\n\n  --border-radius: 0.25rem;\n\n  &[size=\"large\"] {\n    height: 4.8rem;\n    --padding-top: 1rem;\n    --padding-bottom: 1rem;\n  }\n\n  ${({fontSize}) => Styles.serializeFontSize(fontSize)}\n  ${({fontWeight}) => Styles.serializeFontWeight(fontWeight)}\n`\n\nexport default Button;\n","import styled from \"styled-components\";\nimport {IonText} from \"@ionic/react\";\nimport {FontSize} from \"../../constants/font-size\";\nimport {Styles} from \"../../utils/styles\";\nimport {FontWeight} from \"../../constants/font-weight\";\n\nconst Text = styled(IonText)<{ fontSize?: FontSize, fontWeight?: FontWeight }>`\n  ${({fontSize}) => Styles.serializeFontSize(fontSize)}\n  ${({fontWeight}) => Styles.serializeFontWeight(fontWeight)}\n`\n\nexport default Text;","export enum FontSize {\n    XL = '2.625rem',\n    L = '2rem',\n    M = '0.75rem',\n    SM = '0.375rem'\n}","export enum FontWeight {\n    NORMAL = '400',\n    BOLD = '700'\n}","import styled from \"styled-components\";\n\nconst Img = styled.img`\n  height: auto;\n  width: 100%;\n  object-fit: cover;\n`\n\nexport default Img;","import React from 'react';\nimport {IonCol, IonContent, IonGrid, IonPage, IonRow} from '@ionic/react';\nimport styled from \"styled-components\";\nimport Button from \"../components/ionic/Button\";\nimport Text from \"../components/ionic/Text\";\nimport {FontSize} from \"../constants/font-size\";\nimport {FontWeight} from \"../constants/font-weight\";\nimport Img from \"../components/ionic/Img\";\n\nconst Content = styled(IonContent)`\n  --background: var(--app-color-charade);\n  \n  ion-row {\n    ion-col {\n      &:nth-child(1) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        height: 30vh;\n      }\n      &:nth-child(2) {\n        height: 30vh;\n        overflow: hidden;\n      }\n      &:nth-child(3) {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        height: 35vh;\n        width: 100vw;\n      }\n    }\n  }\n`\n\nconst WelcomePage: React.FC = () => {\n    return (\n        <IonPage>\n            <Content fullscreen>\n                <IonGrid className=\"ion-no-padding\">\n                    <IonRow>\n                        <IonCol size=\"12\">\n                            <Text\n                                className=\"ion-text-uppercase\"\n                                fontSize={FontSize.XL}\n                                color=\"light\"\n                                fontWeight={FontWeight.BOLD}>\n                                Nascar\n                            </Text>\n                            <Text\n                                className=\"ion-text-capitalize\"\n                                fontSize={FontSize.L}\n                                color=\"light\"\n                                fontWeight={FontWeight.BOLD}>\n                                Digital Hero Cards\n                            </Text>\n                        </IonCol>\n                        <IonCol className=\"ion-no-padding\" size=\"12\">\n                            <Img\n                                srcSet=\"assets/images/welcome-screen.png 1x, assets/images/welcome-screen@2x.png 2x\"\n                                src=\"assets/images/welcome-screen.png\"\n                                alt=\"Welcome\"\n                            />\n                        </IonCol>\n                        <IonCol size=\"12\">\n                            <Button\n                                size=\"large\"\n                                expand=\"full\"\n                                className=\"ion-text-uppercase ion-margin\"\n                                fontSize={FontSize.M}\n                                fontWeight={FontWeight.BOLD}>\n                                Existing user\n                            </Button>\n                            <Button\n                                size=\"large\"\n                                expand=\"block\"\n                                className=\"ion-text-uppercase ion-margin\"\n                                color=\"tertiary\"\n                                fontSize={FontSize.M}\n                                fontWeight={FontWeight.BOLD}>\n                                Create account\n                            </Button>\n                        </IonCol>\n                        <IonCol size=\"12\" className=\"ion-text-center\">\n                            <Text\n                                fontSize={FontSize.SM}\n                                color=\"light\">\n                                © Protokol, 2021\n                            </Text>\n                        </IonCol>\n                    </IonRow>\n                </IonGrid>\n            </Content>\n        </IonPage>\n    );\n};\n\nexport default WelcomePage;\n","import React, {useEffect} from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport {\n    IonApp,\n    IonRouterOutlet,\n} from '@ionic/react';\nimport {IonReactHashRouter} from '@ionic/react-router';\nimport {useDispatch} from \"react-redux\";\nimport {SetBaseUrlAppAction} from \"./store/actions/app\";\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Fonts */\nimport './theme/fonts.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport WelcomePage from './pages/WelcomePage';\n\nconst App: React.FC = () => {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(SetBaseUrlAppAction('https://proto-devnet.protokol.sh'));\n    }, [dispatch]);\n\n    return (\n        <IonApp>\n            <IonReactHashRouter>\n                <IonRouterOutlet>\n                    <Route path=\"/welcome\" component={WelcomePage} exact={true}/>\n                    <Route path=\"/\" render={() => <Redirect to=\"/welcome\"/>} exact={true}/>\n                </IonRouterOutlet>\n            </IonReactHashRouter>\n        </IonApp>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { setupConfig } from '@ionic/react';\nimport {Provider} from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configure-store';\nimport AuthRegisterContextProvider from \"./providers/AuthRegisterProvider\";\nimport App from './App';\n\nsetupConfig({\n    mode: 'md'\n});\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <AuthRegisterContextProvider>\n            <App/>\n        </AuthRegisterContextProvider>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}