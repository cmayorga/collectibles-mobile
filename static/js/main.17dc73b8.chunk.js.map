{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","utils/styles.ts","components/ionic/Button.tsx","components/ionic/Img.tsx","components/ionic/Text.tsx","constants/font-size.ts","constants/font-weight.ts","constants/images.ts","pages/WelcomePage.tsx","store/actions/app.ts","App.tsx","utils/encryption.ts","providers/AuthRegisterProvider.tsx","serviceWorker.ts","store/actions/network.ts","store/selectors/app.ts","store/epics/app.ts","store/epics/network.ts","store/epics/index.ts","store/reducers/app.ts","store/reducers/network.ts","store/reducers/index.ts","store/services/local-storage-service.ts","store/services/protokol-connection.ts","store/configure-store.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Styles","fontSize","fontWeight","Button","styled","IonButton","serializeFontSize","serializeFontWeight","Img","img","FontSize","FontWeight","Text","IonText","addGHPagesPrefix","window","location","hostname","welcomeImage","alt","src","srcSet","AppActions","Content","IonContent","WelcomePage","fullscreen","className","size","XL","color","BOLD","L","expand","M","SM","SetEncodedUserPrivateKeyAction","userPrivateKey","saveToStorage","type","SET_ENCODED_USER_PRIVATE_KEY","payload","App","dispatch","useDispatch","useEffect","baseUrl","SET_BASE_URL","path","component","exact","render","to","Encryption","pin","utils","hex","fromBytes","SHA256","asBytes","toEncode","hash","encodedBytes","ModeOfOperation","ctr","toBytes","encrypt","utf8","toDecode","decodedBytes","decrypt","authRegisterProviderInitialState","passphrase","AuthRegisterContext","createContext","AuthRegisterContextProvider","children","useState","state","setState","generatePassphrase","useCallback","language","bip39","undefined","prevState","setPin","passphraseJson","JSON","stringify","encoded","encode","providerState","Provider","value","Boolean","match","NetworkActions","LoadNetworkConfigurationAction","LOAD_NETWORK_CONFIGURATION","baseUrlSelector","app","encodedUserPrivateKeySelector","_","state$","pipe","distinctUntilChanged","filter","action$","storage","ofType","withLatestFrom","tap","encodedUserPrivateKey","set","ignoreElements","first","switchMap","get","of","connection","action","stateBaseUrl","defer","api","crypto","response","nodeCryptoConfiguration","body","data","NETWORK_CONFIGURATION_SUCCESS","catchError","err","error","NETWORK_CONFIGURATION_ERROR","combineEpics","appEpics","networkEpics","initialState","reducer","isLoading","combineReducers","network","version","process","STORAGE_VERSION","PREFIX","key","serializedValue","localStorage","setItem","getItem","parse","timeout","ProtokolConnection","withOptions","epicMiddleware","createEpicMiddleware","dependencies","setupConfig","mode","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","run","rootEpic","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2JAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,IACzBG,EAAOC,QAAUf,G,oBChMjB,IAAID,EAAM,CACT,sBAAuB,CACtB,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,IACzBG,EAAOC,QAAUf,G,iWCrBKgB,EAAtB,+GAC2BC,GACvB,GAAKA,EAGL,MAAM,cAAN,OAAqBA,EAArB,OALJ,0CAQ6BC,GACzB,GAAKA,EAGL,MAAM,gBAAN,OAAuBA,EAAvB,SAZJ,K,wPCGA,IAmBeC,EAnBAC,YAAOC,IAAPD,CAAH,KAeR,gBAAGH,EAAH,EAAGA,SAAH,OAAkBD,EAAOM,kBAAkBL,MAC3C,gBAAGC,EAAH,EAAGA,WAAH,OAAoBF,EAAOO,oBAAoBL,M,8HCpBnD,IAMeM,EANHJ,IAAOK,IAAV,K,qFCIT,ICNYC,ECAAC,EFWGC,EALFR,YAAOS,IAAPT,CAAH,KACN,gBAAGH,EAAH,EAAGA,SAAH,OAAkBD,EAAOM,kBAAkBL,MAC3C,gBAAGC,EAAH,EAAGA,WAAH,OAAoBF,EAAOO,oBAAoBL,O,SCRvCQ,K,cAAAA,E,SAAAA,E,YAAAA,E,eAAAA,M,cCAAC,K,aAAAA,E,YAAAA,M,KCAZ,IAGMG,EAAmB,WACvB,MAAiC,uBAA7BC,OAAOC,SAASC,SACX,uBAEF,IAGHC,EAAe,CACnBC,IAAK,UACLC,IAAI,GAAD,OAAKN,KAAL,OAZsB,qCAazBO,OAAO,GAAD,OAAKP,KAAL,OAbmB,oCAanB,gBAAoDA,KAApD,OAZmB,uCAYnB,Q,0kBCHR,ICPKQ,EDOCC,EAAUnB,YAAOoB,IAAPpB,CAAH,KAuFEqB,EA5De,WAC5B,OACE,kBAAC,IAAD,KACE,kBAACF,EAAD,CAASG,YAAU,GACjB,kBAAC,IAAD,CAASC,UAAU,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,KAAK,MACX,kBAAC,EAAD,CACED,UAAU,qBACV1B,SAAUS,EAASmB,GACnBC,MAAM,QACN5B,WAAYS,EAAWoB,MAJzB,UAQA,kBAAC,EAAD,CACEJ,UAAU,sBACV1B,SAAUS,EAASsB,EACnBF,MAAM,QACN5B,WAAYS,EAAWoB,MAJzB,uBASF,kBAAC,IAAD,CAAQJ,UAAU,iBAAiBC,KAAK,MACtC,kBAAC,EAAQV,IAEX,kBAAC,IAAD,CAAQU,KAAK,MACX,kBAAC,EAAD,CACEA,KAAK,QACLK,OAAO,OACPN,UAAU,gCACV1B,SAAUS,EAASwB,EACnBhC,WAAYS,EAAWoB,MALzB,iBASA,kBAAC,EAAD,CACEH,KAAK,QACLK,OAAO,QACPN,UAAU,gCACVG,MAAM,WACN7B,SAAUS,EAASwB,EACnBhC,WAAYS,EAAWoB,MANzB,mBAWF,kBAAC,IAAD,CAAQH,KAAK,KAAKD,UAAU,mBAC1B,kBAAC,EAAD,CAAM1B,SAAUS,EAASyB,GAAIL,MAAM,SAAnC,8B,SCnFTR,K,iCAAAA,E,kEAAAA,M,KAqBL,IAOMc,EAAiC,SACrCC,GADqC,IAErCC,IAFqC,+DAGG,CACxCC,KAAMjB,EAAWkB,6BACjBC,QAAS,CACPJ,iBACAC,mBCNWI,G,oFAvBO,WACpB,IAAMC,EAAWC,cAMjB,OAJAC,qBAAU,WDYgB,IAACC,ECXzBH,GDWyBG,ECXI,mCDW0C,CACzEP,KAAMjB,EAAWyB,aACjBN,QAAS,CACPK,gBCbC,CAACH,IAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOK,KAAK,WAAWC,UAAWxB,EAAayB,OAAO,IACtD,kBAAC,IAAD,CACEF,KAAK,IACLG,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAG,cAC3BF,OAAO,S,mDCrBGG,EAAtB,kGACcC,GACV,OAAOC,QAAMC,IAAIC,UAAUC,IAAOJ,EAAK,CAAEK,SAAS,OAFtD,6BAKgBC,EAAkBC,GAC9B,IAAMC,EAAe,IAAIC,kBAAgBC,IACvCT,QAAMC,IAAIS,QAAQJ,IAClBK,QAAQX,QAAMY,KAAKF,QAAQL,IAC7B,OAAOL,QAAMC,IAAIC,UAAUK,KAT/B,6BAYgBM,EAAkBP,GAC9B,IAAMQ,EAAe,IAAIN,kBAAgBC,IACvCT,QAAMC,IAAIS,QAAQJ,IAClBS,QAAQf,QAAMC,IAAIS,QAAQG,IAC5B,OAAOb,QAAMY,KAAKV,UAAUY,OAhBhC,KCaME,EAA8D,CAClEC,WAAY,MAGDC,EAAsBC,wBACjC,IA6DaC,EA1DyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC9BC,mBAAQ,eAC7BN,IAFmD,mBACjDO,EADiD,KAC1CC,EAD0C,KAIlDpC,EAAWC,cAEXoC,EAAwEC,uBAC5E,WAA2B,IAA1BC,EAAyB,uDAAd,UACJV,EAAaW,wBACjBC,OACAA,EACAD,YAAgBD,IAGlBH,GAAS,SAACM,GAAD,mBAAC,eACLA,GADI,IAEPb,oBAGJ,CAACO,IAGGO,EAAgDL,uBACpD,SAAC3B,GAAS,IACAkB,EAAeM,EAAfN,WACFe,EAAiBC,KAAKC,UAAU,CAAEjB,eAClCkB,EAAUrC,EAAWsC,OAAOJ,EAAgBlC,EAAWQ,KAAKP,IAElEX,EAASP,EAA+BsD,MAc1C,CAACZ,EAAOnC,IAGJiD,EAA6C,CACjDd,QACAE,qBACAM,UAGF,OACE,kBAACb,EAAoBoB,SAArB,CAA8BC,MAAOF,GAClChB,ICjEamB,QACW,cAA7BhF,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS+E,MACvB,2D,ICdDC,E,yIAAAA,K,iEAAAA,E,uEAAAA,E,oEAAAA,M,KA4BL,IAAMC,GAAiC,SACrCpD,GADqC,MAEG,CACxCP,KAAM0D,EAAeE,2BACrB1D,QAAS,CACPK,aCnCSsD,GAAkB,SAACtB,GAAD,OAAsBA,EAAMuB,IAAIvD,SAClDwD,GAAgC,SAACxB,GAAD,OAC3CA,EAAMuB,IAAIhE,gBC+DG,IA3CyB,SAACkE,EAAGC,GAAJ,OACtCA,EAAOC,KACL1H,YAAIqH,IACJM,cACAC,aAAO,SAAC7D,GAAD,QAAeA,KACtB/D,YAAImH,MAG6C,SACnDU,EACAJ,EAFmD,OAGjDK,EAHiD,EAGjDA,QAHiD,OAKnDD,EAAQH,KACNK,YAAOxF,EAAWkB,8BAClBuE,YAAeP,EAAOC,KAAK1H,YAAIuH,MAC/BU,cAAI,YAA2C,IAAD,mBAAtCvE,EAAsC,KAAtCA,QAAWwE,EAA2B,KAGxCxE,EADFH,eAGAuE,EAAQK,IAAI,KAAMD,MAGtBE,iBAGmD,SACrDP,EACAL,EAFqD,OAGnDM,EAHmD,EAGnDA,QAHmD,OAKrDD,EAAQH,KACNW,eACAC,cAAU,WACR,IAAMhF,EAAiBwE,EAAQS,IAAY,MAC3C,OAAIjF,EACKkF,YAAGnF,EAA+BC,GAAgB,IAEpDkF,cAAKd,KAAKU,sB,oBCjCR,IAnBiB,SAACP,EAASJ,EAAV,OAAoBgB,EAApB,EAAoBA,WAApB,OAC9BZ,EAAQE,OAAOb,EAAeE,4BAA4BM,KACxDM,YAAeP,EAAOC,KAAK1H,YAAIqH,MAC/BiB,cAAU,YAA6B,IAAD,mBAA1BI,EAA0B,KAAlBC,EAAkB,KAC5BjF,EAAYgF,EAAZhF,QAER,OAAOkF,cAAM,kBACXH,EAAW/E,EAAQK,SAAW4E,GAC3BE,IAAI,QACJC,YACHpB,KACA1H,aAAI,SAAC+I,GAAD,MHoBVC,EGpBU,OHoBVA,EGnByC,OAACD,QAAD,IAACA,GAAD,UAACA,EAAUE,YAAX,aAAC,EAAgBC,KHoBf,CAC3C1F,KAAM0D,EAAeiC,8BACrBzF,QAAS,CACPsF,+BGrBII,cAAW,SAACC,GAAD,OAASb,aH0B1Bc,EG1B6DD,EH2BpB,CACzC7F,KAAM0D,EAAeqC,4BACrB7F,QAAS,CACP4F,YALoC,IACtCA,YI/CaE,OAAY,WAAZ,cAAgBC,IAAhB,mBAA6BC,MCItCC,GAAyB,CAC7B5F,aAASsC,EACT/C,oBAAgB+C,GAkCHuD,GA/BsC,WAG/C,IAFJ7D,EAEG,uDAFK4D,GACRjB,EACG,uCACKlF,EAASkF,EAATlF,KAER,OAAQA,GACN,KAAKjB,EAAWyB,aAAe,IAEhBD,EACT2E,EADFhF,QAAWK,QAEb,OAAO,2BACFgC,GADL,IAEEhC,YAGJ,KAAKxB,EAAWkB,6BAA+B,IAEhCH,EACToF,EADFhF,QAAWJ,eAGb,OAAO,2BACFyC,GADL,IAEEzC,mBAGJ,QACE,OAAOyC,IC/BP4D,GAA6B,CACjCE,WAAW,GA+BED,GA5B8C,WAGvD,IAFJ7D,EAEG,uDAFK4D,GACRjB,EACG,uCACKlF,EAASkF,EAATlF,KAER,OAAQA,GACN,KAAK0D,EAAeE,2BAClB,OAAO,2BACFrB,GADL,IAEE8D,WAAW,IAGf,KAAK3C,EAAeiC,8BAAgC,IAErCH,EACTN,EADFhF,QAAWsF,wBAEb,OAAO,2BACFjD,GADL,IAEE8D,WAAW,EACXb,4BAGJ,QACE,OAAOjD,IChCE+D,eAA2B,CACxCxC,OACAyC,aCNIC,GAAUC,uIAAYC,iBAAmB,EACzCC,GAAM,+BAA2BH,GAA3B,MAEL,SAAS7B,GAAaiC,EAAarD,GACxC,IACE,IAAMsD,EAAkB5D,KAAKC,UAAUK,GACvCuD,aAAaC,QAAb,UAAwBJ,IAAxB,OAAiCC,GAAOC,GACxC,MAAOf,GACP,MAAM,IAAI7I,MAAJ,8CAAiD2J,EAAjD,OAIH,SAAS7B,GAAa6B,GAC3B,IACE,IAAMC,EAAkBC,aAAaE,QAAb,UAAwBL,IAAxB,OAAiCC,IACzD,IAAKC,EACH,OAEF,OAAO5D,KAAKgE,MAAMJ,GAClB,MAAOf,GACP,MAAM,IAAI7I,MAAJ,gDAAmD2J,EAAnD,O,cCdK3B,GALI,SAAC1E,GAAD,IAAkB2G,EAAlB,uDAA4B,IAA5B,OACjB,IAAIC,sBAAJ,UAA0B5G,EAA1B,SAAyC6G,YAAY,CACnDF,aCUEG,GAAiBC,YAKrB,CACAC,aAAc,CACZtC,cACAX,aCbJkD,YAAY,CACVC,KAAM,OAGR,IAAMC,GDaS,WACb,IAAMC,EACJnJ,OAAOoJ,sCAAwCC,IAC3CH,EAAQI,YACZC,GACAJ,EAAiBK,YAAgBX,MAInC,OADAA,GAAeY,IAAIC,IACZR,ECtBKS,GAEdC,IAASxH,OACP,kBAAC,IAAD,CAAU8G,MAAOA,IACf,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJW,SAASC,eAAe,SZmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1L,MAAK,SAAC2L,GAClCA,EAAaC,kB","file":"static/js/main.17dc73b8.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t353,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t354,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t355,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t356,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t357,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t358,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t359,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t360,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t361,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t362,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t363,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t364,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t365,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t366,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t367,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t368,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t369,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t370,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t371,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t372,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t373,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t374,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t375,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t376,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t377,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t378,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t379,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t380,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t381,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t382,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t383,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t384,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t385,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t386,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t387,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t388,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t389,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t390,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t391,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t392,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t393,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t394,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t395,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 193;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t397,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 195;\nmodule.exports = webpackAsyncContext;","import { FontSize } from '../constants/font-size';\nimport { FontWeight } from '../constants/font-weight';\n\nexport abstract class Styles {\n  static serializeFontSize(fontSize?: FontSize) {\n    if (!fontSize) {\n      return undefined;\n    }\n    return `font-size: ${fontSize};`;\n  }\n\n  static serializeFontWeight(fontWeight?: FontWeight) {\n    if (!fontWeight) {\n      return undefined;\n    }\n    return `font-weight: ${fontWeight};`;\n  }\n}\n","import styled from 'styled-components';\nimport { IonButton } from '@ionic/react';\nimport { FontSize } from '../../constants/font-size';\nimport { FontWeight } from '../../constants/font-weight';\nimport { Styles } from '../../utils/styles';\n\nconst Button = styled(IonButton)<{\n  fontSize?: FontSize;\n  fontWeight?: FontWeight;\n}>`\n  &::part(native) {\n  }\n\n  --border-radius: 0.25rem;\n\n  &[size='large'] {\n    height: 4.8rem;\n    --padding-top: 1rem;\n    --padding-bottom: 1rem;\n  }\n\n  ${({ fontSize }) => Styles.serializeFontSize(fontSize)}\n  ${({ fontWeight }) => Styles.serializeFontWeight(fontWeight)}\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst Img = styled.img`\n  height: auto;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport default Img;\n","import styled from 'styled-components';\nimport { IonText } from '@ionic/react';\nimport { FontSize } from '../../constants/font-size';\nimport { FontWeight } from '../../constants/font-weight';\nimport { Styles } from '../../utils/styles';\n\nconst Text = styled(IonText)<{ fontSize?: FontSize; fontWeight?: FontWeight }>`\n  ${({ fontSize }) => Styles.serializeFontSize(fontSize)}\n  ${({ fontWeight }) => Styles.serializeFontWeight(fontWeight)}\n`;\n\nexport default Text;\n","export enum FontSize {\n  XL = '2.625rem',\n  L = '2rem',\n  M = '0.75rem',\n  SM = '0.375rem',\n}\n","export enum FontWeight {\n  NORMAL = '400',\n  BOLD = '700',\n}\n","const welcomeImagePath1x = '/assets/images/welcome-screen.png';\nconst welcomeImagePath2x = '/assets/images/welcome-screen@2x.png';\n\nconst addGHPagesPrefix = () => {\n  if (window.location.hostname === 'protokol.github.io') {\n    return '/collectibles-mobile';\n  }\n  return '';\n};\n\nconst welcomeImage = {\n  alt: 'Welcome',\n  src: `${addGHPagesPrefix()}${welcomeImagePath1x}`,\n  srcSet: `${addGHPagesPrefix()}${welcomeImagePath1x} 1x, ${addGHPagesPrefix()}${welcomeImagePath2x} 2x`,\n};\n\nexport { welcomeImage };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { IonCol, IonContent, IonGrid, IonPage, IonRow } from '@ionic/react';\nimport Button from '../components/ionic/Button';\nimport Img from '../components/ionic/Img';\nimport Text from '../components/ionic/Text';\nimport { FontSize } from '../constants/font-size';\nimport { FontWeight } from '../constants/font-weight';\nimport { welcomeImage } from '../constants/images';\n\nconst Content = styled(IonContent)`\n  --background: var(--app-color-charade);\n\n  ion-row {\n    ion-col {\n      &:nth-child(1) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        height: 30vh;\n      }\n      &:nth-child(2) {\n        height: 30vh;\n        overflow: hidden;\n      }\n      &:nth-child(3) {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        height: 35vh;\n        width: 100vw;\n      }\n    }\n  }\n`;\n\nconst WelcomePage: React.FC = () => {\n  return (\n    <IonPage>\n      <Content fullscreen>\n        <IonGrid className=\"ion-no-padding\">\n          <IonRow>\n            <IonCol size=\"12\">\n              <Text\n                className=\"ion-text-uppercase\"\n                fontSize={FontSize.XL}\n                color=\"light\"\n                fontWeight={FontWeight.BOLD}\n              >\n                Nascar\n              </Text>\n              <Text\n                className=\"ion-text-capitalize\"\n                fontSize={FontSize.L}\n                color=\"light\"\n                fontWeight={FontWeight.BOLD}\n              >\n                Digital Hero Cards\n              </Text>\n            </IonCol>\n            <IonCol className=\"ion-no-padding\" size=\"12\">\n              <Img {...welcomeImage} />\n            </IonCol>\n            <IonCol size=\"12\">\n              <Button\n                size=\"large\"\n                expand=\"full\"\n                className=\"ion-text-uppercase ion-margin\"\n                fontSize={FontSize.M}\n                fontWeight={FontWeight.BOLD}\n              >\n                Existing user\n              </Button>\n              <Button\n                size=\"large\"\n                expand=\"block\"\n                className=\"ion-text-uppercase ion-margin\"\n                color=\"tertiary\"\n                fontSize={FontSize.M}\n                fontWeight={FontWeight.BOLD}\n              >\n                Create account\n              </Button>\n            </IonCol>\n            <IonCol size=\"12\" className=\"ion-text-center\">\n              <Text fontSize={FontSize.SM} color=\"light\">\n                © Protokol, 2021\n              </Text>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </Content>\n    </IonPage>\n  );\n};\n\nexport default WelcomePage;\n","import { Action } from 'redux';\n\n// Actions\nenum AppActions {\n  SET_BASE_URL = '@App/SET_BASE_URL',\n  SET_ENCODED_USER_PRIVATE_KEY = '@App/SET_ENCODED_USER_PRIVATE_KEY',\n}\n\nexport interface SetBaseUrlAppActionType\n  extends Action<AppActions.SET_BASE_URL> {\n  payload: {\n    baseUrl: string;\n  };\n}\n\nexport interface SetEncodedUserPrivateKeyActionType\n  extends Action<AppActions.SET_ENCODED_USER_PRIVATE_KEY> {\n  payload: {\n    userPrivateKey: string;\n    saveToStorage?: boolean;\n  };\n}\n\n// Action creators\nconst SetBaseUrlAppAction = (baseUrl: string): SetBaseUrlAppActionType => ({\n  type: AppActions.SET_BASE_URL,\n  payload: {\n    baseUrl,\n  },\n});\n\nconst SetEncodedUserPrivateKeyAction = (\n  userPrivateKey: string,\n  saveToStorage = true\n): SetEncodedUserPrivateKeyActionType => ({\n  type: AppActions.SET_ENCODED_USER_PRIVATE_KEY,\n  payload: {\n    userPrivateKey,\n    saveToStorage,\n  },\n});\n\nexport type APP_ACTION_TYPES = SetBaseUrlAppActionType &\n  SetEncodedUserPrivateKeyActionType;\n\nexport { AppActions, SetBaseUrlAppAction, SetEncodedUserPrivateKeyAction };\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactHashRouter } from '@ionic/react-router';\nimport WelcomePage from './pages/WelcomePage';\nimport { SetBaseUrlAppAction } from './store/actions/app';\nimport './theme/ionic-theme';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(SetBaseUrlAppAction('https://proto-devnet.protokol.sh'));\n  }, [dispatch]);\n\n  return (\n    <IonApp>\n      <IonReactHashRouter>\n        <IonRouterOutlet>\n          <Route path=\"/welcome\" component={WelcomePage} exact={true} />\n          <Route\n            path=\"/\"\n            render={() => <Redirect to=\"/welcome\" />}\n            exact={true}\n          />\n        </IonRouterOutlet>\n      </IonReactHashRouter>\n    </IonApp>\n  );\n};\n\nexport default App;\n","import { ModeOfOperation, utils } from 'aes-js';\nimport SHA256 from 'sha256';\n\nexport abstract class Encryption {\n  static hash(pin: string) {\n    return utils.hex.fromBytes(SHA256(pin, { asBytes: true }));\n  }\n\n  static encode(toEncode: string, hash: string) {\n    const encodedBytes = new ModeOfOperation.ctr(\n      utils.hex.toBytes(hash)\n    ).encrypt(utils.utf8.toBytes(toEncode));\n    return utils.hex.fromBytes(encodedBytes);\n  }\n\n  static decode(toDecode: string, hash: string) {\n    const decodedBytes = new ModeOfOperation.ctr(\n      utils.hex.toBytes(hash)\n    ).decrypt(utils.hex.toBytes(toDecode));\n    return utils.utf8.fromBytes(decodedBytes);\n  }\n}\n","import * as bip39 from 'bip39';\nimport React, { createContext, FC, useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SetEncodedUserPrivateKeyAction } from '../store/actions/app';\nimport { Encryption } from '../utils/encryption';\n\ninterface AuthRegisterProviderState {\n  passphrase: string | null;\n}\n\ninterface AuthRegisterProviderContext {\n  readonly state: AuthRegisterProviderState;\n  generatePassphrase: (language?: string) => void;\n  setPin: (pin: string) => void;\n}\n\nconst authRegisterProviderInitialState: AuthRegisterProviderState = {\n  passphrase: null,\n};\n\nexport const AuthRegisterContext = createContext<AuthRegisterProviderContext>(\n  {} as AuthRegisterProviderContext\n);\n\nconst AuthRegisterContextProvider: FC = ({ children }) => {\n  const [state, setState] = useState<AuthRegisterProviderState>({\n    ...authRegisterProviderInitialState,\n  });\n  const dispatch = useDispatch();\n\n  const generatePassphrase: AuthRegisterProviderContext['generatePassphrase'] = useCallback(\n    (language = 'english') => {\n      const passphrase = bip39.generateMnemonic(\n        undefined,\n        undefined,\n        bip39.wordlists[language]\n      );\n\n      setState((prevState) => ({\n        ...prevState,\n        passphrase,\n      }));\n    },\n    [setState]\n  );\n\n  const setPin: AuthRegisterProviderContext['setPin'] = useCallback(\n    (pin) => {\n      const { passphrase } = state;\n      const passphraseJson = JSON.stringify({ passphrase });\n      const encoded = Encryption.encode(passphraseJson, Encryption.hash(pin));\n\n      dispatch(SetEncodedUserPrivateKeyAction(encoded));\n\n      /* const decoded = Encryption.decode(encoded, hashedPin);\n        console.log(decoded);\n        const passphraseJsonDecoded = JSON.parse(decoded);\n        console.dir(passphraseJsonDecoded);\n\n        try {\n            const encodedWrong = Encryption.decode(passphraseJson, Encryption.hash('4321'));\n            JSON.parse(encodedWrong);\n        } catch (e) {\n            console.error('decode failed', e);\n        } */\n    },\n    [state, dispatch]\n  );\n\n  const providerState: AuthRegisterProviderContext = {\n    state,\n    generatePassphrase,\n    setPin,\n  };\n\n  return (\n    <AuthRegisterContext.Provider value={providerState}>\n      {children}\n    </AuthRegisterContext.Provider>\n  );\n};\n\nexport default AuthRegisterContextProvider;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { Action } from 'redux';\nimport { NodeCryptoConfiguration } from '@arkecosystem/client/dist/resourcesTypes/node';\n\n// Actions\nenum NetworkActions {\n  LOAD_NETWORK_CONFIGURATION = '@Network/LOAD_NETWORK_CONFIGURATION',\n  NETWORK_CONFIGURATION_SUCCESS = '@Network/NETWORK_CONFIGURATION_SUCCESS',\n  NETWORK_CONFIGURATION_ERROR = '@Network/NETWORK_CONFIGURATION_ERROR',\n}\n\nexport interface LoadNetworkConfigurationActionType\n  extends Action<NetworkActions.LOAD_NETWORK_CONFIGURATION> {\n  payload: {\n    baseUrl?: string;\n  };\n}\n\nexport interface NetworkConfigurationSuccessActionType\n  extends Action<NetworkActions.NETWORK_CONFIGURATION_SUCCESS> {\n  payload: {\n    nodeCryptoConfiguration: NodeCryptoConfiguration;\n  };\n}\n\nexport interface NetworkConfigurationErrorActionType\n  extends Action<NetworkActions.NETWORK_CONFIGURATION_ERROR> {\n  payload: {\n    error: Error;\n  };\n}\n\n// Action creators\nconst LoadNetworkConfigurationAction = (\n  baseUrl?: string\n): LoadNetworkConfigurationActionType => ({\n  type: NetworkActions.LOAD_NETWORK_CONFIGURATION,\n  payload: {\n    baseUrl,\n  },\n});\n\nconst NetworkConfigurationSuccessAction = (\n  nodeCryptoConfiguration: NodeCryptoConfiguration\n): NetworkConfigurationSuccessActionType => ({\n  type: NetworkActions.NETWORK_CONFIGURATION_SUCCESS,\n  payload: {\n    nodeCryptoConfiguration,\n  },\n});\n\nconst NetworkConfigurationErrorAction = (\n  error: Error\n): NetworkConfigurationErrorActionType => ({\n  type: NetworkActions.NETWORK_CONFIGURATION_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport type NETWORK_ACTION_TYPES = LoadNetworkConfigurationActionType &\n  NetworkConfigurationSuccessActionType &\n  NetworkConfigurationErrorActionType;\n\nexport {\n  NetworkActions,\n  LoadNetworkConfigurationAction,\n  NetworkConfigurationSuccessAction,\n  NetworkConfigurationErrorAction,\n};\n","import { RootState } from '../types';\n\nexport const baseUrlSelector = (state: RootState) => state.app.baseUrl;\nexport const encodedUserPrivateKeySelector = (state: RootState) =>\n  state.app.userPrivateKey;\n","import { ofType } from 'redux-observable';\nimport { of } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  first,\n  ignoreElements,\n  map,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport {\n  AppActions,\n  SetEncodedUserPrivateKeyAction,\n  SetEncodedUserPrivateKeyActionType,\n} from '../actions/app';\nimport { LoadNetworkConfigurationAction } from '../actions/network';\nimport {\n  baseUrlSelector,\n  encodedUserPrivateKeySelector,\n} from '../selectors/app';\nimport { RootEpic } from '../types';\n\nconst onInitLoadNetworkEpic: RootEpic = (_, state$) =>\n  state$.pipe(\n    map(baseUrlSelector),\n    distinctUntilChanged(),\n    filter((baseUrl) => !!baseUrl),\n    map(LoadNetworkConfigurationAction)\n  );\n\nconst persistUserPrivateKeyInStorageEpic: RootEpic = (\n  action$,\n  state$,\n  { storage }\n) =>\n  action$.pipe(\n    ofType(AppActions.SET_ENCODED_USER_PRIVATE_KEY),\n    withLatestFrom(state$.pipe(map(encodedUserPrivateKeySelector))),\n    tap(([{ payload }, encodedUserPrivateKey]) => {\n      const {\n        saveToStorage,\n      } = payload as SetEncodedUserPrivateKeyActionType['payload'];\n      if (saveToStorage) {\n        storage.set('pk', encodedUserPrivateKey);\n      }\n    }),\n    ignoreElements()\n  );\n\nconst restoreUserPrivateKeyFromStorageEpic: RootEpic = (\n  action$,\n  _,\n  { storage }\n) =>\n  action$.pipe(\n    first(),\n    switchMap(() => {\n      const userPrivateKey = storage.get<string>('pk');\n      if (userPrivateKey) {\n        return of(SetEncodedUserPrivateKeyAction(userPrivateKey, false));\n      }\n      return of().pipe(ignoreElements());\n    })\n  );\n\nexport default [\n  onInitLoadNetworkEpic,\n  persistUserPrivateKeyInStorageEpic,\n  restoreUserPrivateKeyFromStorageEpic,\n];\n","import { defer, of } from 'rxjs';\nimport { catchError, map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport {\n  LoadNetworkConfigurationActionType,\n  NetworkActions,\n  NetworkConfigurationErrorAction,\n  NetworkConfigurationSuccessAction,\n} from '../actions/network';\nimport { baseUrlSelector } from '../selectors/app';\nimport { RootEpic } from '../types';\n\nconst fetchUserEpic: RootEpic = (action$, state$, { connection }) =>\n  action$.ofType(NetworkActions.LOAD_NETWORK_CONFIGURATION).pipe(\n    withLatestFrom(state$.pipe(map(baseUrlSelector))),\n    switchMap(([action, stateBaseUrl]) => {\n      const { payload } = action as LoadNetworkConfigurationActionType;\n\n      return defer(() =>\n        connection(payload.baseUrl || stateBaseUrl!)\n          .api('node')\n          .crypto()\n      ).pipe(\n        map((response) =>\n          NetworkConfigurationSuccessAction(response?.body?.data)\n        ),\n        catchError((err) => of(NetworkConfigurationErrorAction(err)))\n      );\n    })\n  );\n\nexport default [fetchUserEpic];\n","import { combineEpics } from 'redux-observable';\nimport appEpics from './app';\nimport networkEpics from './network';\n\nexport default combineEpics(...appEpics, ...networkEpics);\n","import { Reducer } from 'redux';\nimport { APP_ACTION_TYPES, AppActions } from '../actions/app';\n\nexport interface AppState {\n  baseUrl?: string;\n  userPrivateKey?: string;\n}\n\nconst initialState: AppState = {\n  baseUrl: undefined,\n  userPrivateKey: undefined,\n};\n\nconst reducer: Reducer<AppState, APP_ACTION_TYPES> = (\n  state = initialState,\n  action\n) => {\n  const { type } = action;\n\n  switch (type) {\n    case AppActions.SET_BASE_URL: {\n      const {\n        payload: { baseUrl },\n      } = action;\n      return {\n        ...state,\n        baseUrl,\n      };\n    }\n    case AppActions.SET_ENCODED_USER_PRIVATE_KEY: {\n      const {\n        payload: { userPrivateKey },\n      } = action;\n\n      return {\n        ...state,\n        userPrivateKey,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { Reducer } from 'redux';\nimport { NodeCryptoConfiguration } from '@arkecosystem/client/dist/resourcesTypes/node';\nimport { NETWORK_ACTION_TYPES, NetworkActions } from '../actions/network';\n\nexport interface NetworkState {\n  isLoading: boolean;\n  nodeCryptoConfiguration?: NodeCryptoConfiguration;\n}\n\nconst initialState: NetworkState = {\n  isLoading: false,\n};\n\nconst reducer: Reducer<NetworkState, NETWORK_ACTION_TYPES> = (\n  state = initialState,\n  action\n) => {\n  const { type } = action;\n\n  switch (type) {\n    case NetworkActions.LOAD_NETWORK_CONFIGURATION: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n    case NetworkActions.NETWORK_CONFIGURATION_SUCCESS: {\n      const {\n        payload: { nodeCryptoConfiguration },\n      } = action;\n      return {\n        ...state,\n        isLoading: false,\n        nodeCryptoConfiguration,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport { RootState } from '../types';\nimport app from './app';\nimport network from './network';\n\nexport default combineReducers<RootState>({\n  app,\n  network,\n});\n","// Add version for possible migrations\nconst version = process.env.STORAGE_VERSION || 0;\nconst PREFIX = `collectibles-mobile-v${version}::`;\n\nexport function set<T = any>(key: string, value: T): void {\n  try {\n    const serializedValue = JSON.stringify(value);\n    localStorage.setItem(`${PREFIX}${key}`, serializedValue);\n  } catch (error) {\n    throw new Error(`Failed to serialize value for key: \"${key}\"`);\n  }\n}\n\nexport function get<T = any>(key: string): T | undefined {\n  try {\n    const serializedValue = localStorage.getItem(`${PREFIX}${key}`);\n    if (!serializedValue) {\n      return;\n    }\n    return JSON.parse(serializedValue);\n  } catch (error) {\n    throw new Error(`Failed to deserialize value for key: \"${key}\"`);\n  }\n}\n","import { ProtokolConnection } from '@protokol/client';\n\nconst connection = (baseUrl: string, timeout = 5000) =>\n  new ProtokolConnection(`${baseUrl}/api`).withOptions({\n    timeout,\n  });\n\nexport default connection;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport rootEpic from './epics';\nimport rootReducer from './reducers';\nimport * as storage from './services/local-storage-service';\nimport connection from './services/protokol-connection';\nimport { RootActions, RootDependencies, RootState } from './types';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst epicMiddleware = createEpicMiddleware<\n  RootActions,\n  RootActions,\n  RootState,\n  RootDependencies\n>({\n  dependencies: {\n    connection,\n    storage,\n  },\n});\n\nexport default function configureStore() {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(epicMiddleware))\n  );\n\n  epicMiddleware.run(rootEpic);\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { setupConfig } from '@ionic/react';\nimport App from './App';\nimport AuthRegisterContextProvider from './providers/AuthRegisterProvider';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configure-store';\n\nsetupConfig({\n  mode: 'md',\n});\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <AuthRegisterContextProvider>\n      <App />\n    </AuthRegisterContextProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}