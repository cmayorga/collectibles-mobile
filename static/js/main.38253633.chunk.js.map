{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","constants/font-size.ts","utils/styles.ts","components/ionic/Button.tsx","components/Keypad.tsx","components/ionic/Text.tsx","components/ionic/ErrorMessage.tsx","components/ionic/Input.tsx","constants/font-weight.ts","constants/storage.ts","store/selectors/app.ts","store/actions/app.ts","store/selectors/network.ts","utils/encryption.ts","utils/storage-service.ts","providers/AuthLoginProvider.tsx","providers/AuthRegisterProvider.tsx","pages/PasscodePage.tsx","pages/UsernamePage.tsx","components/ionic/Img.tsx","constants/images.ts","pages/WelcomePage.tsx","App.tsx","serviceWorker.ts","store/actions/network.ts","store/epics/app.ts","store/epics/network.ts","store/epics/index.ts","store/reducers/app.ts","store/reducers/network.ts","store/reducers/index.ts","store/services/protokol-connection.ts","store/configure-store.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","FontSize","Styles","fontSize","SM","L","serializeLineHeight","fontWeight","Button","styled","IonButton","serializeFontSize","serializeFontWeight","keypadNumbers","Array","from","length","KeypadNumberBtn","children","onClick","M","size","disabled","type","expand","fill","color","preventDefault","Keypad","onChange","onEnter","useState","pin","setPin","canAddPinNumber","useCallback","addPinNumber","digit","prevPin","deletePinNumber","slice","useEffect","_","index","keypadDigit","toString","key","offset","Text","IonText","FormInputError","props","render","message","className","FontWeight","Input","IonInput","StorageKeys","STORAGE_VERSION","process","STORAGE_PREFIX","AppActions","baseUrlSelector","state","app","baseUrl","encodedUserPrivateKeySelector","userPrivateKey","nodeCryptoConfigurationSelector","network","nodeCryptoConfiguration","Encryption","utils","hex","fromBytes","SHA256","asBytes","toEncode","hash","encodedBytes","ModeOfOperation","ctr","toBytes","encrypt","utf8","toDecode","decodedBytes","decrypt","storage","localStorage","set","value","serializedValue","JSON","stringify","setItem","error","get","getItem","parse","removeItem","clear","authLoginProviderInitialState","session","isReady","AuthLoginContext","createContext","window","sessionStorage","AuthLoginContextProvider","setState","encodedPrivateKey","useSelector","shallowEqual","unlock","encodedPin","encodedPassphrase","nodeConfig","decoded","decode","passphrase","pubKeyHash","address","Identities","Address","fromPassphrase","privateKey","PrivateKey","console","STORAGE_PIN_KEY","providerState","Provider","SetEncodedUserPrivateKeyAction","saveToStorage","SET_ENCODED_USER_PRIVATE_KEY","payload","authRegisterProviderInitialState","AuthRegisterContext","AuthRegisterContextProvider","dispatch","useDispatch","authLoginSetPin","useContext","setUsername","username","prevState","bip39","undefined","passphraseJson","encoded","encode","PasscodeSteps","Content","IonContent","PasscodePage","history","withConfirm","Passcode","step","setStep","useForm","defaultValues","passcode","confirmPasscode","mode","control","handleSubmit","errors","watch","register","clearErrors","push","submitForm","required","pattern","validate","ConfirmPasscode","getTitle","getSubTitle","fullscreen","BOLD","onSubmit","hidden","readonly","name","rules","UsernamePage","formState","isValid","placeholder","onIonChange","detail","Img","img","addGHPagesPrefix","location","hostname","welcomeImage","alt","src","srcSet","WelcomePage","XL","routerLink","XS","App","SET_BASE_URL","path","component","exact","to","Boolean","match","NetworkActions","LoadNetworkConfigurationAction","LOAD_NETWORK_CONFIGURATION","state$","pipe","distinctUntilChanged","filter","action$","ofType","withLatestFrom","tap","encodedUserPrivateKey","STORAGE_PK_KEY","ignoreElements","first","switchMap","of","connection","action","stateBaseUrl","defer","api","crypto","response","body","data","NETWORK_CONFIGURATION_SUCCESS","catchError","err","NETWORK_CONFIGURATION_ERROR","combineEpics","appEpics","networkEpics","initialState","reducer","isLoading","combineReducers","timeout","ProtokolConnection","withOptions","epicMiddleware","createEpicMiddleware","dependencies","setupConfig","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","run","rootEpic","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2JAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.38253633.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t358,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t359,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t360,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t361,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t362,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t363,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t364,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t365,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t366,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t367,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t368,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t369,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t370,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t371,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t372,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t373,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t374,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t375,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t376,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t377,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t378,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t379,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t380,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t381,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t382,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t383,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t384,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t385,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t386,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t387,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t388,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t389,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t390,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t391,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t392,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t393,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t394,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t395,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t396,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t397,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t398,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t399,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t400,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 199;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t402,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 201;\nmodule.exports = webpackAsyncContext;","export enum FontSize {\n  XL = '2.625rem', // 42px\n  L = '2rem', // 32px\n  M = '1.3125rem', // 21px\n  SM = '0.75rem', // 12px\n  XS = '0.375rem', // 6px\n}\n","import { FontSize } from '../constants/font-size';\nimport { FontWeight } from '../constants/font-weight';\n\nexport abstract class Styles {\n  static serializeLineHeight(fontSize?: FontSize) {\n    switch (fontSize) {\n      case FontSize.SM:\n        return 'line-height: 1.125rem;';\n      case FontSize.L:\n        return 'line-height: 2.0625rem;';\n      default:\n        return '';\n    }\n  }\n\n  static serializeFontSize(fontSize?: FontSize) {\n    if (!fontSize) {\n      return undefined;\n    }\n    return `\n      ${Styles.serializeLineHeight(fontSize)}\n      font-size: ${fontSize};\n    `;\n  }\n\n  static serializeFontWeight(fontWeight?: FontWeight) {\n    if (!fontWeight) {\n      return undefined;\n    }\n    return `font-weight: ${fontWeight};`;\n  }\n}\n","import styled from 'styled-components';\nimport { IonButton } from '@ionic/react';\nimport { FontSize } from '../../constants/font-size';\nimport { FontWeight } from '../../constants/font-weight';\nimport { Styles } from '../../utils/styles';\n\nconst Button = styled(IonButton)<{\n  fontSize?: FontSize;\n  fontWeight?: FontWeight;\n}>`\n  &::part(native) {\n  }\n\n  --border-radius: 0.25rem;\n\n  &[size='large'] {\n    height: 4.8rem;\n    --padding-top: 1rem;\n    --padding-bottom: 1rem;\n  }\n\n  ${({ fontSize }) => Styles.serializeFontSize(fontSize)}\n  ${({ fontWeight }) => Styles.serializeFontWeight(fontWeight)}\n`;\n\nexport default Button;\n","import React, {\n  MouseEventHandler,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { JSX } from '@ionic/core';\nimport { IonCol } from '@ionic/react';\nimport { FontSize } from '../constants/font-size';\nimport Button from './ionic/Button';\n\nconst MAX_PIN_LENGTH = 4;\n\nconst keypadNumbers: undefined[] = Array.from({ length: 9 });\n\nconst KeypadNumberBtn: React.FC<{\n  onClick: MouseEventHandler;\n  fontSize?: FontSize;\n  size?: JSX.IonButton['size'];\n  disabled?: boolean;\n}> = ({\n  children,\n  onClick,\n  fontSize = FontSize.M,\n  size = 'large',\n  disabled = false,\n}) => (\n  <Button\n    type=\"button\"\n    size={size}\n    expand=\"block\"\n    fill=\"clear\"\n    color=\"light\"\n    fontSize={fontSize}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n    disabled={disabled}\n  >\n    {children}\n  </Button>\n);\n\nconst Keypad: React.FC<{\n  onChange: (pin: string) => void;\n  onEnter: () => void;\n}> = ({ onChange, onEnter }) => {\n  const [pin, setPin] = useState<string>('');\n\n  const canAddPinNumber = useCallback(() => MAX_PIN_LENGTH > pin.length, [pin]);\n\n  const addPinNumber = useCallback(\n    (digit: string) => {\n      if (canAddPinNumber()) {\n        setPin((prevPin) => `${prevPin}${digit}`);\n      }\n    },\n    [setPin, canAddPinNumber]\n  );\n\n  const deletePinNumber = useCallback(() => {\n    setPin((prevPin) => {\n      if (!prevPin.length) {\n        return '';\n      }\n      return prevPin.slice(0, -1);\n    });\n  }, [setPin]);\n\n  useEffect(() => {\n    onChange(pin);\n  }, [pin, onChange]);\n\n  return (\n    <>\n      {keypadNumbers.map((_, index) => {\n        const keypadDigit = (index + 1).toString();\n\n        return (\n          <IonCol key={index} size=\"4\">\n            <KeypadNumberBtn\n              disabled={!canAddPinNumber()}\n              onClick={() => addPinNumber(keypadDigit)}\n            >\n              {keypadDigit}\n            </KeypadNumberBtn>\n          </IonCol>\n        );\n      })}\n      <IonCol size=\"4\" offset=\"4\">\n        <KeypadNumberBtn\n          disabled={!canAddPinNumber()}\n          onClick={() => addPinNumber('0')}\n        >\n          0\n        </KeypadNumberBtn>\n      </IonCol>\n      <IonCol size=\"4\" offset=\"1\">\n        <KeypadNumberBtn\n          size=\"default\"\n          fontSize={FontSize.SM}\n          onClick={deletePinNumber}\n        >\n          Delete\n        </KeypadNumberBtn>\n      </IonCol>\n      <IonCol size=\"4\" offset=\"2\">\n        <KeypadNumberBtn\n          size=\"default\"\n          fontSize={FontSize.SM}\n          onClick={onEnter}\n        >\n          Enter\n        </KeypadNumberBtn>\n      </IonCol>\n    </>\n  );\n};\n\nexport default Keypad;\n","import styled from 'styled-components';\nimport { IonText } from '@ionic/react';\nimport { FontSize } from '../../constants/font-size';\nimport { FontWeight } from '../../constants/font-weight';\nimport { Styles } from '../../utils/styles';\n\nconst Text = styled(IonText)<{ fontSize?: FontSize; fontWeight?: FontWeight }>`\n  ${({ fontSize }) => Styles.serializeFontSize(fontSize)}\n  ${({ fontWeight }) => Styles.serializeFontWeight(fontWeight)}\n`;\n\nexport default Text;\n","import React from 'react';\nimport { FieldErrors } from 'react-hook-form/dist/types/errors';\nimport styled from 'styled-components';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { FontSize } from '../../constants/font-size';\nimport { FontWeight } from '../../constants/font-weight';\nimport { Styles } from '../../utils/styles';\nimport Text from './Text';\n\nconst ErrorMessageWrapped: React.FC<{\n  name: string;\n  errors: FieldErrors;\n  className?: string;\n}> = (props) => (\n  <ErrorMessage\n    render={({ message }) => (\n      <Text className=\"ion-padding-top\" fontSize={FontSize.SM} color=\"danger\">\n        {message}\n      </Text>\n    )}\n    {...props}\n  />\n);\n\nconst FormInputError = styled(ErrorMessageWrapped)<{\n  fontSize?: FontSize;\n  fontWeight?: FontWeight;\n}>`\n  ${({ fontSize }) => Styles.serializeFontSize(fontSize)}\n  ${({ fontWeight }) => Styles.serializeFontWeight(fontWeight)}\n`;\n\nexport default FormInputError;\n","import styled from 'styled-components';\nimport { IonInput } from '@ionic/react';\nimport { FontSize } from '../../constants/font-size';\nimport { Styles } from '../../utils/styles';\n\nconst Input = styled(IonInput)<{\n  fontSize?: FontSize;\n}>`\n  --color: var(--ion-color-light);\n  --placeholder-color: var(--ion-color-light);\n  --background: var(--app-color-charade);\n  --padding-start: 1.375rem;\n  --padding-end: 1.375rem;\n  --padding-top: 1.1875rem;\n  --padding-bottom: 1.1875rem;\n\n  border: 1px solid var(--ion-color-light);\n\n  ${({ fontSize }) => Styles.serializeFontSize(fontSize)}\n\n  &.form-input- {\n    &prefix-username {\n      &:before {\n        content: '@';\n        position: absolute;\n        left: 0.65rem;\n      }\n    }\n  }\n`;\n\nexport default Input;\n","export enum FontWeight {\n  NORMAL = '400',\n  BOLD = '700',\n}\n","const STORAGE_VERSION = process.env.STORAGE_VERSION || 0;\nconst STORAGE_PREFIX = `collectibles-mobile-v${STORAGE_VERSION}::`;\n\nenum StorageKeys {\n  STORAGE_PK_KEY = 'pk',\n  STORAGE_PIN_KEY = 'pin',\n}\n\nexport { STORAGE_PREFIX, StorageKeys };\n","import { RootState } from '../types';\n\nexport const baseUrlSelector = (state: RootState) => state.app.baseUrl;\nexport const encodedUserPrivateKeySelector = (state: RootState) =>\n  state.app.userPrivateKey;\n","import { Action } from 'redux';\n\n// Actions\nenum AppActions {\n  SET_BASE_URL = '@App/SET_BASE_URL',\n  SET_ENCODED_USER_PRIVATE_KEY = '@App/SET_ENCODED_USER_PRIVATE_KEY',\n}\n\nexport interface SetBaseUrlAppActionType\n  extends Action<AppActions.SET_BASE_URL> {\n  payload: {\n    baseUrl: string;\n  };\n}\n\nexport interface SetEncodedUserPrivateKeyActionType\n  extends Action<AppActions.SET_ENCODED_USER_PRIVATE_KEY> {\n  payload: {\n    userPrivateKey: string;\n    saveToStorage?: boolean;\n  };\n}\n\n// Action creators\nconst SetBaseUrlAppAction = (baseUrl: string): SetBaseUrlAppActionType => ({\n  type: AppActions.SET_BASE_URL,\n  payload: {\n    baseUrl,\n  },\n});\n\nconst SetEncodedUserPrivateKeyAction = (\n  userPrivateKey: string,\n  saveToStorage = true\n): SetEncodedUserPrivateKeyActionType => ({\n  type: AppActions.SET_ENCODED_USER_PRIVATE_KEY,\n  payload: {\n    userPrivateKey,\n    saveToStorage,\n  },\n});\n\nexport type APP_ACTION_TYPES = SetBaseUrlAppActionType &\n  SetEncodedUserPrivateKeyActionType;\n\nexport { AppActions, SetBaseUrlAppAction, SetEncodedUserPrivateKeyAction };\n","import { RootState } from '../types';\n\nexport const nodeCryptoConfigurationSelector = (state: RootState) =>\n  state.network.nodeCryptoConfiguration;\n","import { ModeOfOperation, utils } from 'aes-js';\nimport SHA256 from 'sha256';\n\nexport abstract class Encryption {\n  static hash(pin: string) {\n    return utils.hex.fromBytes(SHA256(pin, { asBytes: true }));\n  }\n\n  static encode(toEncode: string, hash: string) {\n    const encodedBytes = new ModeOfOperation.ctr(\n      utils.hex.toBytes(hash)\n    ).encrypt(utils.utf8.toBytes(toEncode));\n    return utils.hex.fromBytes(encodedBytes);\n  }\n\n  static decode(toDecode: string, hash: string) {\n    const decodedBytes = new ModeOfOperation.ctr(\n      utils.hex.toBytes(hash)\n    ).decrypt(utils.hex.toBytes(toDecode));\n    return utils.utf8.fromBytes(decodedBytes);\n  }\n}\n","import { STORAGE_PREFIX, StorageKeys } from '../constants/storage';\n\nconst storage = (storage = localStorage) => {\n  const set = <T = any>(key: StorageKeys, value: T): void => {\n    try {\n      const serializedValue = JSON.stringify(value);\n      storage.setItem(`${STORAGE_PREFIX}${key}`, serializedValue);\n    } catch (error) {\n      throw new Error(`Failed to serialize value for key: \"${key}\"`);\n    }\n  };\n\n  const get = <T = any>(key: StorageKeys): T | undefined => {\n    try {\n      const serializedValue = storage.getItem(`${STORAGE_PREFIX}${key}`);\n      if (!serializedValue) {\n        return;\n      }\n      return JSON.parse(serializedValue);\n    } catch (error) {\n      throw new Error(`Failed to deserialize value for key: \"${key}\"`);\n    }\n  };\n\n  const removeItem = (key: StorageKeys) => {\n    storage.removeItem(`${STORAGE_PREFIX}${key}`);\n  };\n\n  const clear = () => {\n    storage.clear();\n  };\n\n  return {\n    set,\n    get,\n    removeItem,\n    clear,\n  };\n};\n\nexport default storage;\n","import React, {\n  createContext,\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { NodeCryptoConfiguration } from '@arkecosystem/client/dist/resourcesTypes/node';\nimport { Identities } from '@arkecosystem/crypto';\nimport { StorageKeys } from '../constants/storage';\nimport { encodedUserPrivateKeySelector } from '../store/selectors/app';\nimport { nodeCryptoConfigurationSelector } from '../store/selectors/network';\nimport { Encryption } from '../utils/encryption';\nimport storage from '../utils/storage-service';\n\ninterface AuthLoginProviderState {\n  session: {\n    isReady: boolean;\n    error: Error | null;\n    address?: string;\n    privateKey?: string;\n  };\n}\n\ninterface AuthLoginProviderContext {\n  readonly state: AuthLoginProviderState;\n  setPin: (pin: string) => void;\n}\n\nconst authLoginProviderInitialState: AuthLoginProviderState = {\n  session: {\n    isReady: false,\n    error: null,\n  },\n};\n\nexport const AuthLoginContext = createContext<AuthLoginProviderContext>(\n  {} as AuthLoginProviderContext\n);\n\nconst session = storage(window.sessionStorage);\n\nconst AuthLoginContextProvider: FC = ({ children }) => {\n  const [state, setState] = useState<AuthLoginProviderState>({\n    ...authLoginProviderInitialState,\n  });\n\n  const encodedPrivateKey = useSelector(\n    encodedUserPrivateKeySelector,\n    shallowEqual\n  );\n  const nodeCryptoConfiguration = useSelector(\n    nodeCryptoConfigurationSelector,\n    shallowEqual\n  );\n\n  const unlock = useCallback(\n    (\n      encodedPin: string,\n      encodedPassphrase: string,\n      nodeConfig: NodeCryptoConfiguration\n    ) => {\n      try {\n        const decoded = Encryption.decode(encodedPassphrase, encodedPin);\n        const { passphrase } = JSON.parse(decoded);\n\n        const { network } = nodeConfig;\n        const { pubKeyHash } = network;\n        const address = Identities.Address.fromPassphrase(\n          passphrase,\n          pubKeyHash\n        );\n        const privateKey = Identities.PrivateKey.fromPassphrase(passphrase);\n\n        setState({\n          session: {\n            isReady: true,\n            error: null,\n            address,\n            privateKey,\n          },\n        });\n      } catch (error) {\n        console.error('decode failed', error);\n\n        setState({\n          session: {\n            isReady: false,\n            error,\n          },\n        });\n      } finally {\n        session.removeItem(StorageKeys.STORAGE_PIN_KEY);\n      }\n    },\n    []\n  );\n\n  useEffect(() => {\n    const encodedPin = session.get<string>(StorageKeys.STORAGE_PIN_KEY);\n\n    if (encodedPin && encodedPrivateKey && nodeCryptoConfiguration) {\n      unlock(encodedPin, encodedPrivateKey, nodeCryptoConfiguration);\n    }\n  }, [encodedPrivateKey, nodeCryptoConfiguration, unlock]);\n\n  const setPin = useCallback((pin: string) => {\n    session.set(StorageKeys.STORAGE_PIN_KEY, Encryption.hash(pin));\n\n    setState({\n      ...authLoginProviderInitialState,\n    });\n  }, []);\n\n  const providerState: AuthLoginProviderContext = {\n    state,\n    setPin,\n  };\n\n  return (\n    <AuthLoginContext.Provider value={providerState}>\n      {children}\n    </AuthLoginContext.Provider>\n  );\n};\n\nexport default AuthLoginContextProvider;\n","import * as bip39 from 'bip39';\nimport React, {\n  createContext,\n  FC,\n  useCallback,\n  useContext,\n  useState,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SetEncodedUserPrivateKeyAction } from '../store/actions/app';\nimport { Encryption } from '../utils/encryption';\nimport { AuthLoginContext } from './AuthLoginProvider';\n\ninterface AuthRegisterProviderState {\n  username?: string;\n}\n\ninterface AuthRegisterProviderContext {\n  readonly state: AuthRegisterProviderState;\n  setUsername: (username: string) => void;\n  setPin: (pin: string) => void;\n}\n\nconst authRegisterProviderInitialState: AuthRegisterProviderState = {};\n\nexport const AuthRegisterContext = createContext<AuthRegisterProviderContext>(\n  {} as AuthRegisterProviderContext\n);\n\nconst AuthRegisterContextProvider: FC = ({ children }) => {\n  const [state, setState] = useState<AuthRegisterProviderState>({\n    ...authRegisterProviderInitialState,\n  });\n  const dispatch = useDispatch();\n  const { setPin: authLoginSetPin } = useContext(AuthLoginContext);\n\n  const setUsername: AuthRegisterProviderContext['setUsername'] = useCallback(\n    (username) => {\n      setState((prevState) => ({\n        ...prevState,\n        username,\n      }));\n    },\n    [setState]\n  );\n\n  const setPin: AuthRegisterProviderContext['setPin'] = useCallback(\n    (pin) => {\n      const passphrase = bip39.generateMnemonic(\n        undefined,\n        undefined,\n        bip39.wordlists['english']\n      );\n\n      const passphraseJson = JSON.stringify({ passphrase });\n      const encoded = Encryption.encode(passphraseJson, Encryption.hash(pin));\n\n      authLoginSetPin(pin);\n      dispatch(SetEncodedUserPrivateKeyAction(encoded));\n    },\n    [authLoginSetPin, dispatch]\n  );\n\n  const providerState: AuthRegisterProviderContext = {\n    state,\n    setUsername,\n    setPin,\n  };\n\n  return (\n    <AuthRegisterContext.Provider value={providerState}>\n      {children}\n    </AuthRegisterContext.Provider>\n  );\n};\n\nexport default AuthRegisterContextProvider;\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useForm, Controller, FieldValues } from 'react-hook-form';\nimport { RouterProps } from 'react-router';\nimport styled from 'styled-components';\nimport { IonCol, IonContent, IonGrid, IonPage, IonRow } from '@ionic/react';\nimport Keypad from '../components/Keypad';\nimport FormInputError from '../components/ionic/ErrorMessage';\nimport Input from '../components/ionic/Input';\nimport Text from '../components/ionic/Text';\nimport { FontSize } from '../constants/font-size';\nimport { FontWeight } from '../constants/font-weight';\nimport { AuthLoginContext } from '../providers/AuthLoginProvider';\nimport { AuthRegisterContext } from '../providers/AuthRegisterProvider';\n\nconst Content = styled(IonContent)`\n  --background: var(--app-color-charade);\n\n  & > ion-grid > ion-row {\n    > ion-col {\n      &:nth-child(1) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: flex-end;\n        height: 40vh;\n        padding: 2rem;\n        text-align: center;\n      }\n    }\n  }\n\n  .form-input-pin {\n    width: 80%;\n    --padding-start: 2.375rem;\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n    letter-spacing: 1rem;\n  }\n`;\n\nenum PasscodeSteps {\n  Passcode,\n  ConfirmPasscode,\n}\n\ninterface PasscodeForm extends FieldValues {\n  passcode: string;\n  confirmPasscode?: string;\n}\n\nconst PasscodePage: React.FC<\n  RouterProps & {\n    withConfirm?: boolean;\n  }\n> = ({ history, withConfirm = false }) => {\n  const {\n    state: { session },\n  } = useContext(AuthLoginContext);\n  const { setPin } = useContext(AuthRegisterContext);\n\n  const [step, setStep] = useState<PasscodeSteps>(PasscodeSteps.Passcode);\n\n  const {\n    control,\n    handleSubmit,\n    errors,\n    watch,\n    register,\n    clearErrors,\n  } = useForm<PasscodeForm>({\n    defaultValues: {\n      passcode: '',\n      confirmPasscode: '',\n    },\n    mode: 'onSubmit',\n  });\n\n  const { passcode, confirmPasscode } = watch();\n\n  useEffect(() => {\n    if (session && !session.error && session.isReady) {\n      history.push('/welcome');\n    }\n  }, [session, history]);\n\n  const submitForm = useCallback(\n    ({ passcode }: PasscodeForm) => {\n      if (withConfirm && step === PasscodeSteps.Passcode) {\n        register('confirmPasscode', {\n          required: 'Passcode is required!',\n          pattern: {\n            value: /^[0-9]{4}$/,\n            message: 'Passcode should be 4-digit number',\n          },\n          validate: (value) => value === passcode || 'Passcodes do not match',\n        });\n        setStep(PasscodeSteps.ConfirmPasscode);\n        clearErrors(['passcode', 'confirmPasscode']);\n      } else {\n        setPin(passcode);\n      }\n    },\n    [setPin, register, withConfirm, clearErrors, step]\n  );\n\n  const getTitle = useCallback(() => {\n    switch (step) {\n      case PasscodeSteps.ConfirmPasscode:\n        return 'Confirm your passcode';\n      case PasscodeSteps.Passcode:\n      default:\n        return 'Create your passcode';\n    }\n  }, [step]);\n\n  const getSubTitle = useCallback(() => {\n    switch (step) {\n      case PasscodeSteps.ConfirmPasscode:\n        return (\n          <>\n            Please <b>confirm</b> your <b>passcode</b>. Don’t forget to store it\n            somewhere safe, since we are unable to restore any lost passcodes!\n          </>\n        );\n      case PasscodeSteps.Passcode:\n      default:\n        return (\n          <>\n            Create your <b>passcode</b>. Make sure that you&nbsp;\n            <b>Store it somewhere safely</b>, since we are unable to restore any\n            lost passcodes!\n          </>\n        );\n    }\n  }, [step]);\n\n  return (\n    <IonPage>\n      <Content fullscreen>\n        <IonGrid className=\"ion-no-padding\">\n          <IonRow>\n            <IonCol size=\"12\">\n              <Text\n                className=\"ion-margin-bottom\"\n                fontSize={FontSize.L}\n                color=\"light\"\n                fontWeight={FontWeight.BOLD}\n              >\n                {getTitle()}\n              </Text>\n              <Text\n                className=\"ion-margin-top\"\n                fontSize={FontSize.SM}\n                color=\"light\"\n              >\n                {getSubTitle()}\n              </Text>\n            </IonCol>\n            <IonCol size=\"8\" offset=\"2\">\n              <form onSubmit={handleSubmit(submitForm)}>\n                <Controller\n                  render={({ onChange }) => (\n                    <IonRow hidden={step !== PasscodeSteps.Passcode}>\n                      <IonCol size=\"12\">\n                        <Input\n                          type=\"password\"\n                          value={passcode}\n                          className=\"form-input-pin\"\n                          fontSize={FontSize.M}\n                          readonly\n                        />\n                      </IonCol>\n                      <Keypad\n                        onChange={onChange}\n                        onEnter={handleSubmit(submitForm)}\n                      />\n                    </IonRow>\n                  )}\n                  control={control}\n                  name=\"passcode\"\n                  rules={{\n                    required: 'Passcode is required!',\n                    pattern: {\n                      value: /^[0-9]{4}$/,\n                      message: 'Passcode should be 4-digit number',\n                    },\n                  }}\n                />\n                <Controller\n                  render={({ onChange }) => (\n                    <IonRow hidden={step !== PasscodeSteps.ConfirmPasscode}>\n                      <IonCol size=\"12\">\n                        <Input\n                          type=\"password\"\n                          value={confirmPasscode}\n                          className=\"form-input-pin\"\n                          fontSize={FontSize.M}\n                          readonly\n                        />\n                      </IonCol>\n                      <Keypad\n                        onChange={onChange}\n                        onEnter={handleSubmit(submitForm)}\n                      />\n                    </IonRow>\n                  )}\n                  control={control}\n                  name=\"confirmPasscode\"\n                />\n                <div className=\"ion-text-center\">\n                  <FormInputError errors={errors} name=\"passcode\" />\n                  <FormInputError errors={errors} name=\"confirmPasscode\" />\n                </div>\n              </form>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </Content>\n    </IonPage>\n  );\n};\n\nexport default PasscodePage;\n","import React, { useCallback, useContext } from 'react';\nimport { useForm, Controller, FieldValues } from 'react-hook-form';\nimport { RouterProps } from 'react-router';\nimport styled from 'styled-components';\nimport { InputChangeEventDetail } from '@ionic/core';\nimport { IonCol, IonContent, IonGrid, IonPage, IonRow } from '@ionic/react';\nimport Button from '../components/ionic/Button';\nimport FormInputError from '../components/ionic/ErrorMessage';\nimport Input from '../components/ionic/Input';\nimport Text from '../components/ionic/Text';\nimport { FontSize } from '../constants/font-size';\nimport { FontWeight } from '../constants/font-weight';\nimport { AuthRegisterContext } from '../providers/AuthRegisterProvider';\n\nconst Content = styled(IonContent)`\n  --background: var(--app-color-charade);\n\n  ion-row {\n    ion-col {\n      &:nth-child(1) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: flex-end;\n        height: 40vh;\n        padding: 2rem;\n        text-align: center;\n      }\n    }\n  }\n`;\n\ninterface UsernameForm extends FieldValues {\n  username: string;\n}\n\nconst UsernamePage: React.FC<RouterProps> = ({ history }) => {\n  const { setUsername } = useContext(AuthRegisterContext);\n\n  const { formState, control, handleSubmit, errors } = useForm<UsernameForm>({\n    defaultValues: {\n      username: '',\n    },\n    mode: 'onChange',\n  });\n\n  const submitForm = useCallback(\n    ({ username }: UsernameForm) => {\n      if (!formState.isValid) {\n        return;\n      }\n      setUsername(username);\n      history.push('/register/passcode');\n    },\n    [formState.isValid, setUsername, history]\n  );\n\n  return (\n    <IonPage>\n      <Content fullscreen>\n        <IonGrid className=\"ion-no-padding\">\n          <IonRow>\n            <IonCol size=\"12\">\n              <Text\n                className=\"ion-margin-bottom\"\n                fontSize={FontSize.L}\n                color=\"light\"\n                fontWeight={FontWeight.BOLD}\n              >\n                Pick your username\n              </Text>\n              <Text\n                className=\"ion-margin-top\"\n                fontSize={FontSize.SM}\n                color=\"light\"\n              >\n                Collecting digital hero cards is easy! Make it even easier for\n                other collectors to find you, and star collecting your favourite\n                cards!\n              </Text>\n            </IonCol>\n            <IonCol size=\"12\" className=\"ion-padding\">\n              <form onSubmit={handleSubmit(submitForm)}>\n                <Controller\n                  render={({ onChange }) => (\n                    <Input\n                      type=\"text\"\n                      className=\"form-input-prefix-username ion-margin-bottom\"\n                      fontSize={FontSize.SM}\n                      placeholder=\"Pick username...\"\n                      onIonChange={({\n                        detail: { value },\n                      }: CustomEvent<InputChangeEventDetail>) =>\n                        onChange(value)\n                      }\n                    />\n                  )}\n                  control={control}\n                  name=\"username\"\n                  rules={{\n                    required: 'Username is required!',\n                  }}\n                />\n                <FormInputError errors={errors} name=\"username\" />\n                <Button\n                  type=\"submit\"\n                  size=\"large\"\n                  expand=\"block\"\n                  className=\"ion-text-uppercase ion-no-margin ion-margin-top\"\n                  color=\"tertiary\"\n                  fontSize={FontSize.SM}\n                  fontWeight={FontWeight.BOLD}\n                  disabled={!formState.isValid}\n                >\n                  Register username\n                </Button>\n              </form>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </Content>\n    </IonPage>\n  );\n};\n\nexport default UsernamePage;\n","import styled from 'styled-components';\n\nconst Img = styled.img`\n  height: auto;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport default Img;\n","const welcomeImagePath1x = '/assets/images/welcome-screen.png';\nconst welcomeImagePath2x = '/assets/images/welcome-screen@2x.png';\n\nconst addGHPagesPrefix = () => {\n  if (window.location.hostname === 'protokol.github.io') {\n    return '/collectibles-mobile';\n  }\n  return '';\n};\n\nconst welcomeImage = {\n  alt: 'Welcome',\n  src: `${addGHPagesPrefix()}${welcomeImagePath1x}`,\n  srcSet: `${addGHPagesPrefix()}${welcomeImagePath1x} 1x, ${addGHPagesPrefix()}${welcomeImagePath2x} 2x`,\n};\n\nexport { welcomeImage };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { IonCol, IonContent, IonGrid, IonPage, IonRow } from '@ionic/react';\nimport Button from '../components/ionic/Button';\nimport Img from '../components/ionic/Img';\nimport Text from '../components/ionic/Text';\nimport { FontSize } from '../constants/font-size';\nimport { FontWeight } from '../constants/font-weight';\nimport { welcomeImage } from '../constants/images';\n\nconst Content = styled(IonContent)`\n  --background: var(--app-color-charade);\n\n  ion-row {\n    ion-col {\n      &:nth-child(1) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        height: 30vh;\n      }\n\n      &:nth-child(2) {\n        height: 30vh;\n        overflow: hidden;\n      }\n\n      &:nth-child(3) {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        height: 35vh;\n        width: 100vw;\n      }\n    }\n  }\n`;\n\nconst WelcomePage: React.FC = () => {\n  return (\n    <IonPage>\n      <Content fullscreen>\n        <IonGrid className=\"ion-no-padding\">\n          <IonRow>\n            <IonCol size=\"12\">\n              <Text\n                className=\"ion-text-uppercase\"\n                fontSize={FontSize.XL}\n                color=\"light\"\n                fontWeight={FontWeight.BOLD}\n              >\n                Nascar\n              </Text>\n              <Text\n                className=\"ion-text-capitalize\"\n                fontSize={FontSize.L}\n                color=\"light\"\n                fontWeight={FontWeight.BOLD}\n              >\n                Digital Hero Cards\n              </Text>\n            </IonCol>\n            <IonCol className=\"ion-no-padding\" size=\"12\">\n              <Img {...welcomeImage} />\n            </IonCol>\n            <IonCol size=\"12\">\n              <Button\n                size=\"large\"\n                expand=\"block\"\n                className=\"ion-text-uppercase ion-margin\"\n                fontSize={FontSize.SM}\n                fontWeight={FontWeight.BOLD}\n              >\n                Existing user\n              </Button>\n              <Button\n                size=\"large\"\n                expand=\"block\"\n                className=\"ion-text-uppercase ion-margin\"\n                color=\"tertiary\"\n                fontSize={FontSize.SM}\n                fontWeight={FontWeight.BOLD}\n                routerLink=\"/register/username\"\n              >\n                Create account\n              </Button>\n            </IonCol>\n            <IonCol size=\"12\" className=\"ion-text-center\">\n              <Text fontSize={FontSize.XS} color=\"light\">\n                © Protokol, 2021\n              </Text>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </Content>\n    </IonPage>\n  );\n};\n\nexport default WelcomePage;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactHashRouter } from '@ionic/react-router';\nimport PasscodePage from './pages/PasscodePage';\nimport UsernamePage from './pages/UsernamePage';\nimport WelcomePage from './pages/WelcomePage';\nimport AuthLoginContextProvider from './providers/AuthLoginProvider';\nimport AuthRegisterContextProvider from './providers/AuthRegisterProvider';\nimport { SetBaseUrlAppAction } from './store/actions/app';\nimport './theme/ionic-theme';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(SetBaseUrlAppAction('https://proto-devnet.protokol.sh'));\n  }, [dispatch]);\n\n  return (\n    <IonApp>\n      <AuthLoginContextProvider>\n        <IonReactHashRouter>\n          <IonRouterOutlet>\n            <Route path=\"/welcome\" component={WelcomePage} exact />\n            <AuthRegisterContextProvider>\n              <Route path=\"/register/username\" component={UsernamePage} exact />\n              <Route\n                path=\"/register/passcode\"\n                exact\n                render={(props) => <PasscodePage withConfirm {...props} />}\n              />\n            </AuthRegisterContextProvider>\n            <Route path=\"/\" render={() => <Redirect to=\"/welcome\" />} exact />\n          </IonRouterOutlet>\n        </IonReactHashRouter>\n      </AuthLoginContextProvider>\n    </IonApp>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { Action } from 'redux';\nimport { NodeCryptoConfiguration } from '@arkecosystem/client/dist/resourcesTypes/node';\n\n// Actions\nenum NetworkActions {\n  LOAD_NETWORK_CONFIGURATION = '@Network/LOAD_NETWORK_CONFIGURATION',\n  NETWORK_CONFIGURATION_SUCCESS = '@Network/NETWORK_CONFIGURATION_SUCCESS',\n  NETWORK_CONFIGURATION_ERROR = '@Network/NETWORK_CONFIGURATION_ERROR',\n}\n\nexport interface LoadNetworkConfigurationActionType\n  extends Action<NetworkActions.LOAD_NETWORK_CONFIGURATION> {\n  payload: {\n    baseUrl?: string;\n  };\n}\n\nexport interface NetworkConfigurationSuccessActionType\n  extends Action<NetworkActions.NETWORK_CONFIGURATION_SUCCESS> {\n  payload: {\n    nodeCryptoConfiguration: NodeCryptoConfiguration;\n  };\n}\n\nexport interface NetworkConfigurationErrorActionType\n  extends Action<NetworkActions.NETWORK_CONFIGURATION_ERROR> {\n  payload: {\n    error: Error;\n  };\n}\n\n// Action creators\nconst LoadNetworkConfigurationAction = (\n  baseUrl?: string\n): LoadNetworkConfigurationActionType => ({\n  type: NetworkActions.LOAD_NETWORK_CONFIGURATION,\n  payload: {\n    baseUrl,\n  },\n});\n\nconst NetworkConfigurationSuccessAction = (\n  nodeCryptoConfiguration: NodeCryptoConfiguration\n): NetworkConfigurationSuccessActionType => ({\n  type: NetworkActions.NETWORK_CONFIGURATION_SUCCESS,\n  payload: {\n    nodeCryptoConfiguration,\n  },\n});\n\nconst NetworkConfigurationErrorAction = (\n  error: Error\n): NetworkConfigurationErrorActionType => ({\n  type: NetworkActions.NETWORK_CONFIGURATION_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport type NETWORK_ACTION_TYPES = LoadNetworkConfigurationActionType &\n  NetworkConfigurationSuccessActionType &\n  NetworkConfigurationErrorActionType;\n\nexport {\n  NetworkActions,\n  LoadNetworkConfigurationAction,\n  NetworkConfigurationSuccessAction,\n  NetworkConfigurationErrorAction,\n};\n","import { ofType } from 'redux-observable';\nimport { of } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  first,\n  ignoreElements,\n  map,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { StorageKeys } from '../../constants/storage';\nimport {\n  AppActions,\n  SetEncodedUserPrivateKeyAction,\n  SetEncodedUserPrivateKeyActionType,\n} from '../actions/app';\nimport { LoadNetworkConfigurationAction } from '../actions/network';\nimport {\n  baseUrlSelector,\n  encodedUserPrivateKeySelector,\n} from '../selectors/app';\nimport { RootEpic } from '../types';\n\nconst onInitLoadNetworkEpic: RootEpic = (_, state$) =>\n  state$.pipe(\n    map(baseUrlSelector),\n    distinctUntilChanged(),\n    filter((baseUrl) => !!baseUrl),\n    map(LoadNetworkConfigurationAction)\n  );\n\nconst persistUserPrivateKeyInStorageEpic: RootEpic = (\n  action$,\n  state$,\n  { storage }\n) =>\n  action$.pipe(\n    ofType(AppActions.SET_ENCODED_USER_PRIVATE_KEY),\n    withLatestFrom(state$.pipe(map(encodedUserPrivateKeySelector))),\n    tap(([{ payload }, encodedUserPrivateKey]) => {\n      const {\n        saveToStorage,\n      } = payload as SetEncodedUserPrivateKeyActionType['payload'];\n      if (saveToStorage) {\n        storage.set(StorageKeys.STORAGE_PK_KEY, encodedUserPrivateKey);\n      }\n    }),\n    ignoreElements()\n  );\n\nconst restoreUserPrivateKeyFromStorageEpic: RootEpic = (\n  action$,\n  _,\n  { storage }\n) =>\n  action$.pipe(\n    first(),\n    switchMap(() => {\n      const userPrivateKey = storage.get<string>(StorageKeys.STORAGE_PK_KEY);\n      if (userPrivateKey) {\n        return of(SetEncodedUserPrivateKeyAction(userPrivateKey, false));\n      }\n      return of().pipe(ignoreElements());\n    })\n  );\n\nexport default [\n  onInitLoadNetworkEpic,\n  persistUserPrivateKeyInStorageEpic,\n  restoreUserPrivateKeyFromStorageEpic,\n];\n","import { defer, of } from 'rxjs';\nimport { catchError, map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport {\n  LoadNetworkConfigurationActionType,\n  NetworkActions,\n  NetworkConfigurationErrorAction,\n  NetworkConfigurationSuccessAction,\n} from '../actions/network';\nimport { baseUrlSelector } from '../selectors/app';\nimport { RootEpic } from '../types';\n\nconst fetchUserEpic: RootEpic = (action$, state$, { connection }) =>\n  action$.ofType(NetworkActions.LOAD_NETWORK_CONFIGURATION).pipe(\n    withLatestFrom(state$.pipe(map(baseUrlSelector))),\n    switchMap(([action, stateBaseUrl]) => {\n      const { payload } = action as LoadNetworkConfigurationActionType;\n\n      return defer(() =>\n        connection(payload.baseUrl || stateBaseUrl!)\n          .api('node')\n          .crypto()\n      ).pipe(\n        map((response) =>\n          NetworkConfigurationSuccessAction(response?.body?.data)\n        ),\n        catchError((err) => of(NetworkConfigurationErrorAction(err)))\n      );\n    })\n  );\n\nexport default [fetchUserEpic];\n","import { combineEpics } from 'redux-observable';\nimport appEpics from './app';\nimport networkEpics from './network';\n\nexport default combineEpics(...appEpics, ...networkEpics);\n","import { Reducer } from 'redux';\nimport { APP_ACTION_TYPES, AppActions } from '../actions/app';\n\nexport interface AppState {\n  baseUrl?: string;\n  userPrivateKey?: string;\n}\n\nconst initialState: AppState = {\n  baseUrl: undefined,\n  userPrivateKey: undefined,\n};\n\nconst reducer: Reducer<AppState, APP_ACTION_TYPES> = (\n  state = initialState,\n  action\n) => {\n  const { type } = action;\n\n  switch (type) {\n    case AppActions.SET_BASE_URL: {\n      const {\n        payload: { baseUrl },\n      } = action;\n      return {\n        ...state,\n        baseUrl,\n      };\n    }\n    case AppActions.SET_ENCODED_USER_PRIVATE_KEY: {\n      const {\n        payload: { userPrivateKey },\n      } = action;\n\n      return {\n        ...state,\n        userPrivateKey,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { Reducer } from 'redux';\nimport { NodeCryptoConfiguration } from '@arkecosystem/client/dist/resourcesTypes/node';\nimport { NETWORK_ACTION_TYPES, NetworkActions } from '../actions/network';\n\nexport interface NetworkState {\n  isLoading: boolean;\n  nodeCryptoConfiguration?: NodeCryptoConfiguration;\n}\n\nconst initialState: NetworkState = {\n  isLoading: false,\n};\n\nconst reducer: Reducer<NetworkState, NETWORK_ACTION_TYPES> = (\n  state = initialState,\n  action\n) => {\n  const { type } = action;\n\n  switch (type) {\n    case NetworkActions.LOAD_NETWORK_CONFIGURATION: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n    case NetworkActions.NETWORK_CONFIGURATION_SUCCESS: {\n      const {\n        payload: { nodeCryptoConfiguration },\n      } = action;\n      return {\n        ...state,\n        isLoading: false,\n        nodeCryptoConfiguration,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport { RootState } from '../types';\nimport app from './app';\nimport network from './network';\n\nexport default combineReducers<RootState>({\n  app,\n  network,\n});\n","import { ProtokolConnection } from '@protokol/client';\n\nconst connection = (baseUrl: string, timeout = 5000) =>\n  new ProtokolConnection(`${baseUrl}/api`).withOptions({\n    timeout,\n  });\n\nexport default connection;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport storage from '../utils/storage-service';\nimport rootEpic from './epics';\nimport rootReducer from './reducers';\nimport connection from './services/protokol-connection';\nimport { RootActions, RootDependencies, RootState } from './types';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst epicMiddleware = createEpicMiddleware<\n  RootActions,\n  RootActions,\n  RootState,\n  RootDependencies\n>({\n  dependencies: {\n    connection,\n    storage: storage(),\n  },\n});\n\nexport default function configureStore() {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(epicMiddleware))\n  );\n\n  epicMiddleware.run(rootEpic);\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { setupConfig } from '@ionic/react';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configure-store';\n\nsetupConfig({\n  mode: 'md',\n});\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}